{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"\u5173\u4e8e","text":"<p>\u8fd9\u662f\u4e00\u4e2a\u5173\u4e8e\u300cgolang \u76f8\u5173\u5b66\u4e60\u300d\u7684\u4e13\u9898\u7ad9\u70b9\uff0c\u521b\u5efa\u8fd9\u4e2a\u7ad9\u70b9\u7684\u521d\u8877\uff1a</p> <ol> <li>\u56de\u987e\u6574\u7406\u4e4b\u524d\u5b66\u4e60\u8fc7\u7684\u5185\u5bb9\uff0c\u5e76\u66f4\u8fd1\u4e00\u6b65\u5b66\u4e60</li> <li>\u4e86\u89e3\u4e4b\u524d\u6ca1\u6709\u63a5\u89e6\u5230\u7684\u5185\u5bb9</li> <li>\u4f5c\u4e3a\u4e00\u4e2a\u5c06\u6765\u56de\u987e\u7684\u7ad9\u70b9</li> </ol> <p><code>\u59cb\u4e8e 2023/05/31</code></p> <p>\u5efa\u8bbe\u4e2d...</p> <p>\u7ad9\u70b9\u89c4\u5212 v1\uff1a</p> <p>1.\u8bed\u8a00\u57fa\u7840</p> <p>\u5185\u5bb9\uff1aGo \u57fa\u672c\u8bed\u6cd5\u3001\u6570\u636e\u7c7b\u578b\u3001\u6d41\u7a0b\u63a7\u5236</p> <p>2.\u5e76\u53d1\u7f16\u7a0b</p> <p>\u5185\u5bb9\uff1a\u5b66\u4e60 Goroutine\u3001Channel\u3001\u4e92\u65a5\u9501\u7b49\u5185\u5bb9</p> <p>3.\u5185\u5b58\u7ba1\u7406</p> <p>\u5185\u5bb9\uff1a\u4e86\u89e3\u5185\u5b58\u5206\u914d\u3001\u5783\u573e\u56de\u6536\u673a\u5236\uff0c\u5806\u3001\u6808\u3001\u6307\u9488\u3001GC \u7b97\u6cd5</p> <p>\u4f8b\u5982 runtime/malloc.go \u548c runtime/mheap.go \u7b49\u6587\u4ef6</p> <p>4.\u6807\u51c6\u5e93</p> <p>\u5185\u5bb9\uff1a\u4e86\u89e3\u5e38\u7528\u5305\u7684\u8bbe\u8ba1\u4e0e\u5b9e\u73b0\uff0c\u5982 io\u3001net\u3001sync \u7b49</p> <p>5.\u7f16\u8bd1\u5668\u548c\u8fd0\u884c\u65f6</p> <p>\u5185\u5bb9\uff1a \u5b66\u4e60Golang\u7684\u7f16\u8bd1\u5668\u3001\u94fe\u63a5\u5668\u4ee5\u53ca\u8fd0\u884c\u65f6\uff08runtime\uff09\u7684\u5b9e\u73b0\u539f\u7406</p> <p>6.\u7b2c\u4e09\u65b9\u5e93\u548c\u8f85\u52a9\u5f00\u53d1\u6846\u67b6</p> <p>\u5185\u5bb9\uff1a\u63a2\u7d22\u548c\u4f7f\u7528Golang\u751f\u6001\u7cfb\u7edf\u4e2d\u7684\u7b2c\u4e09\u65b9\u5e93\u548c\u6846\u67b6\uff0c\u4e86\u89e3\u5b83\u4eec\u7684\u8bbe\u8ba1\u548c\u5b9e\u73b0\uff0cWeb \u6846\u67b6\uff08Gin\uff09\u3001\u6570\u636e\u5e93\u9a71\u52a8\uff08Gorm\uff09\u3001\u6846\u67b6\u6d4b\u8bd5\uff08Go testing\uff09\u7b49\uff0c\u50cf gRPC \u8fd9\u4e9b\u8f85\u52a9\u5f00\u53d1\u7684\u6846\u67b6\u5b66\u4e60\u4e5f\u53ef\u4ee5\u653e\u8fd9\u91cc</p> <p>7.\u6e90\u7801\u9605\u8bfb</p> <p>\u5185\u5bb9\uff1a\u9605\u8bfbGolang\u6e90\u7801\uff0c\u7279\u522b\u662f\u6807\u51c6\u5e93\u548c\u5e38\u7528\u5e93\u7684\u6e90\u7801\uff0c\u6df1\u5165\u7406\u89e3\u5176\u8bbe\u8ba1\u548c\u5b9e\u73b0</p> <p>8.\u5176\u4ed6</p> <ul> <li>golang tools\uff1a\u4f7f\u7528 golang \u63d0\u4f9b\u7684\u5de5\u5177</li> <li>golang \u5b66\u4e60\u7ad9\u70b9\u3001\u8bba\u575b\u6536\u96c6</li> <li>golang \u77e5\u8bc6\u8fde\u7ed3\uff1a\u5404\u79cd\u77e5\u8bc6\u4e4b\u95f4\u7684\u5173\u8054\u5173\u7cfb</li> </ul> <p>\u6b65\u9aa4</p> <ul> <li> \u786e\u5b9a\u7ad9\u70b9\u529f\u80fd\u3001\u5185\u5bb9\u7ec4\u7ec7\u7ed3\u6784</li> <li> \u5b66\u4e60\u3001\u6574\u7406\u5185\u5bb9\u300c\u57fa\u7840\u5185\u5bb9\u300d</li> <li> \u5b66\u4e60\u3001\u6574\u7406\u5185\u5bb9\u300c\u5e76\u53d1\u7f16\u7a0b\u300d</li> <li> \u5b66\u4e60\u3001\u6574\u7406\u5185\u5bb9\u300c\u5185\u5b58\u7ba1\u7406\u300d</li> <li> \u5b66\u4e60\u3001\u6574\u7406\u5185\u5bb9\u300c\u6807\u51c6\u5e93\u300d</li> <li> \u5b66\u4e60\u3001\u6574\u7406\u5185\u5bb9\u300c\u7f16\u8bd1\u5668\u548c\u8fd0\u884c\u65f6\u300d</li> <li> \u5b66\u4e60\u3001\u6574\u7406\u5185\u5bb9\u300c\u7b2c\u4e09\u65b9\u5e93\u548c\u6846\u67b6\u300d</li> </ul> <p>\u5047\u8bbe\u6211\u76ee\u524d\u5728\u5b66\u4e60 map\uff0c\u6587\u7ae0\u5927\u81f4\u8981\u5305\u542b\uff1a</p> <pre><code>\u4ee5\u4e0b\u662f\u4e00\u4e2a\u5173\u4e8eGolang\u4e2dmap\u7684\u9488\u5bf9\u6027\u5b66\u4e60\u7684\u5927\u7eb2\uff0c\u6db5\u76d6\u4e86\u57fa\u7840\u7528\u6cd5\u3001\u7279\u6027\u3001\u8bbe\u8ba1\u539f\u7406\u3001\u4ee3\u7801\u5b9e\u8df5\u548c\u6e90\u7801\u9605\u8bfb\u7b49\u65b9\u9762\uff1a\n\n1. \u57fa\u7840\u7528\u6cd5\uff1a\n   - \u4e86\u89e3map\u7684\u57fa\u672c\u6982\u5ff5\u548c\u8bed\u6cd5\uff0c\u5305\u62ec\u58f0\u660e\u3001\u521d\u59cb\u5316\u3001\u63d2\u5165\u3001\u5220\u9664\u548c\u8bbf\u95ee\u5143\u7d20\u7b49\u64cd\u4f5c\u3002\n   - \u5b66\u4e60map\u7684\u952e\u503c\u5bf9\u7279\u6027\uff0c\u952e\u7684\u552f\u4e00\u6027\u548c\u503c\u7684\u4efb\u610f\u7c7b\u578b\u3002\n\n2. \u7279\u6027\uff1a\n   - \u63a2\u7d22map\u7684\u7279\u6027\uff0c\u5982\u65e0\u5e8f\u6027\u3001\u52a8\u6001\u589e\u957f\u3001\u81ea\u52a8\u6269\u5bb9\u7b49\u3002\n   - \u7406\u89e3map\u7684\u6027\u80fd\u7279\u70b9\u548c\u9002\u7528\u573a\u666f\u3002\n\n3. \u8bbe\u8ba1\u539f\u7406\uff1a\n   - \u7406\u89e3Golang\u4e2dmap\u7684\u5b9e\u73b0\u539f\u7406\uff0c\u5305\u62ec\u5e95\u5c42\u6570\u636e\u7ed3\u6784\u548c\u7b97\u6cd5\u3002\n   - \u5b66\u4e60\u54c8\u5e0c\u8868\u7684\u5de5\u4f5c\u539f\u7406\uff0c\u89e3\u51b3\u54c8\u5e0c\u51b2\u7a81\u7684\u65b9\u6cd5\uff0c\u5982\u94fe\u8868\u6cd5\u548c\u5f00\u653e\u5bfb\u5740\u6cd5\u3002\n\n4. \u5e76\u53d1\u5b89\u5168\u6027\uff1a\n   - \u4e86\u89e3map\u5728\u5e76\u53d1\u73af\u5883\u4e0b\u7684\u5b89\u5168\u6027\u95ee\u9898\u3002\n   - \u5b66\u4e60\u5e76\u53d1\u5b89\u5168\u7684\u89e3\u51b3\u65b9\u6848\uff0c\u5982\u4f7f\u7528\u4e92\u65a5\u9501\u6216\u5e76\u53d1\u5b89\u5168\u7684sync.Map\u3002\n\n5. \u4ee3\u7801\u5b9e\u8df5\uff1a\n   - \u7f16\u5199\u793a\u4f8b\u4ee3\u7801\uff0c\u6f14\u793amap\u5728\u5b9e\u9645\u5e94\u7528\u4e2d\u7684\u7528\u6cd5\uff0c\u5982\u7edf\u8ba1\u5355\u8bcd\u51fa\u73b0\u6b21\u6570\u3001\u6784\u5efa\u7f13\u5b58\u7b49\u3002\n   - \u5b9e\u8df5\u4f7f\u7528map\u89e3\u51b3\u5e38\u89c1\u95ee\u9898\uff0c\u52a0\u6df1\u5bf9\u5176\u4f7f\u7528\u7684\u7406\u89e3\u3002\n\n6. \u6e90\u7801\u9605\u8bfb\uff1a\n   - \u9605\u8bfbGolang\u7684map\u6e90\u7801\uff0c\u4e86\u89e3\u5176\u5b9e\u73b0\u7ec6\u8282\u3002\n   - \u7814\u7a76\u5e95\u5c42\u6570\u636e\u7ed3\u6784\u548c\u7b97\u6cd5\uff0c\u6df1\u5165\u7406\u89e3map\u7684\u5185\u90e8\u673a\u5236\u3002\n\n7. \u6269\u5c55\u5b66\u4e60\uff1a\n   - \u5b66\u4e60\u4e00\u4e9b\u4e0emap\u76f8\u5173\u7684\u9ad8\u7ea7\u4e3b\u9898\uff0c\u5982map\u7684\u8fed\u4ee3\u987a\u5e8f\u3001\u6027\u80fd\u4f18\u5316\u6280\u5de7\u7b49\u3002\n   - \u63a2\u7d22\u4e00\u4e9b\u4e0emap\u76f8\u5173\u7684\u5305\u6216\u5de5\u5177\uff0c\u5982sync.Map\u3001concurrent-map\u7b49\u3002\n\n8. \u4e4b\u540e\u7684\u8865\u5145\u6269\u5c55\n\n\u5728\u5b66\u4e60\u8fc7\u7a0b\u4e2d\uff0c\u53ef\u4ee5\u7ed3\u5408\u9605\u8bfb\u76f8\u5173\u7684\u4e66\u7c4d\u548c\u5b98\u65b9\u6587\u6863\uff0c\u7f16\u5199\u793a\u4f8b\u4ee3\u7801\u8fdb\u884c\u5b9e\u8df5\uff0c\u5e76\u6df1\u5165\u9605\u8bfbGolang\u7684\u6e90\u7801\u3002\u540c\u65f6\uff0c\u901a\u8fc7\u4e0e\u793e\u533a\u7684\u4ea4\u6d41\u548c\u53c2\u4e0e\u5f00\u6e90\u9879\u76ee\uff0c\u53ef\u4ee5\u8fdb\u4e00\u6b65\u6269\u5c55\u548c\u5de9\u56fa\u5bf9map\u7684\u5b66\u4e60\u3002\n\n\u8bf7\u6ce8\u610f\uff0c\u4ee5\u4e0a\u53ea\u662f\u4e00\u4e2a\u5927\u7eb2\uff0c\u4f60\u53ef\u4ee5\u6839\u636e\u81ea\u5df1\u7684\u9700\u6c42\u548c\u5174\u8da3\u8fdb\u884c\u8c03\u6574\u548c\u6269\u5c55\u3002\u5bf9\u4e8e\u6bcf\u4e2a\u5b66\u4e60\u9636\u6bb5\uff0c\u53ef\u4ee5\u9009\u62e9\u5408\u9002\u7684\u5b66\u4e60\u8d44\u6599\u548c\u8d44\u6e90\uff0c\u5982\u5b98\u65b9\u6587\u6863\u3001\u4e66\u7c4d\u3001\u535a\u5ba2\u3001\u6e90\u7801\u7b49\u3002\u795d\u4f60\u5728\u5b66\u4e60Golang\u4e2d\u7684map\u76f8\u5173\u5185\u5bb9\u65f6\u53d6\u5f97\u8fdb\u5c55\uff01\n</code></pre> <p>\u672c\u7ad9\u70b9\u7531 MkDocs \u9a71\u52a8</p> <p>mkdocs \u73af\u5883\u642d\u5efa\uff1a</p> <ul> <li>\u8981\u6c42\uff1a\u5b89\u88c5 python</li> <li>\u5b89\u88c5 mkdocs\uff1a<code>pip install mkdocs mkdocs-material</code></li> </ul>","tags":[]},{"location":"1.%E8%AF%AD%E8%A8%80%E5%9F%BA%E7%A1%80/%E7%B1%BB%E5%9E%8B/2.string/","title":"string","text":"<p>go version is go1.20.4</p>","tags":[]},{"location":"1.%E8%AF%AD%E8%A8%80%E5%9F%BA%E7%A1%80/%E7%B1%BB%E5%9E%8B/2.string/#_1","title":"\u4e00\u3001\u5b57\u7b26\u4e32\u7684\u7ed3\u6784","text":"<p>\u67e5\u770b string \u5728\u8fd0\u884c\u65f6\u7684\u7ed3\u6784\uff1a</p> <pre><code>type stringStruct struct {\nstr unsafe.Pointer\nlen int\n}\n</code></pre> <p>\u8fd9\u4e2a\u7ed3\u6784\u4f53\u5177\u6709\u4e24\u4e2a\u5b57\u6bb5\uff1a</p> <ol> <li><code>str</code>\uff1a\u4e00\u4e2a\u6307\u5411\u5b57\u7b26\u4e32\u6570\u636e\u7684\u6307\u9488\uff0c\u4f7f\u7528<code>unsafe.Pointer</code>\u7c7b\u578b\u6765\u8868\u793a\u3002<code>unsafe.Pointer</code>\u662fGolang\u4e2d\u7684\u7279\u6b8a\u7c7b\u578b\uff0c\u53ef\u4ee5\u5b58\u50a8\u4efb\u610f\u7c7b\u578b\u7684\u6307\u9488\uff0c\u4f46\u9700\u8981\u8c28\u614e\u4f7f\u7528\uff0c\u56e0\u4e3a\u5b83\u53ef\u4ee5\u7ed5\u8fc7\u7c7b\u578b\u7cfb\u7edf\u7684\u5b89\u5168\u68c0\u67e5\u3002</li> <li><code>len</code>\uff1a\u4e00\u4e2a\u6574\u6570\uff0c\u8868\u793a\u5b57\u7b26\u4e32\u7684\u957f\u5ea6\u3002</li> </ol> \u63d0\u793a <p>\u9700\u8981\u6ce8\u610f\u7684\u662f\uff0c<code>stringStruct</code>\u7ed3\u6784\u4f53\u5728Golang\u7684<code>runtime</code>\u5305\u4e2d\u662f\u975e\u5bfc\u51fa\u7684\uff0c\u5373\u53ea\u80fd\u5728\u5305\u5185\u90e8\u4f7f\u7528\u3002\u8fd9\u662f\u4e3a\u4e86\u4fdd\u62a4\u5b57\u7b26\u4e32\u7684\u4e0d\u53ef\u53d8\u6027\u548c\u5185\u90e8\u7ed3\u6784\u7684\u7a33\u5b9a\u6027\u3002</p> <p>\u4e00\u822c\u60c5\u51b5\u4e0b\uff0c\u5f00\u53d1\u8005\u4e0d\u9700\u8981\u76f4\u63a5\u64cd\u4f5c<code>stringStruct</code>\u7ed3\u6784\u4f53\uff0c\u800c\u662f\u4f7f\u7528Golang\u63d0\u4f9b\u7684\u5b57\u7b26\u4e32\u76f8\u5173\u51fd\u6570\u548c\u65b9\u6cd5\u6765\u5904\u7406\u5b57\u7b26\u4e32\u3002</p> <p> </p> string \u4e0e\u5e95\u5c42\u5b57\u7b26\u5e8f\u5217\u7684\u5173\u7cfb","tags":[]},{"location":"1.%E8%AF%AD%E8%A8%80%E5%9F%BA%E7%A1%80/%E7%B1%BB%E5%9E%8B/2.string/#_2","title":"\u4e8c\u3001\u57fa\u672c\u4f7f\u7528\u63a2\u7a76","text":"","tags":[]},{"location":"1.%E8%AF%AD%E8%A8%80%E5%9F%BA%E7%A1%80/%E7%B1%BB%E5%9E%8B/2.string/#21","title":"2.1 \u58f0\u660e\u3001\u521d\u59cb\u5316","text":"<pre><code>package main\nimport (\n\"fmt\"\n)\nfunc main() {\ns := \"hello\"\nfmt.Println(s)\n}\n</code></pre> <p>\u901a\u8fc7 <code>dlv</code> \u8c03\u8bd5\u770b\u770b\u5e95\u5c42\u662f\u5982\u4f55\u521b\u5efa\u8fd9\u4e2a s \u53d8\u91cf\u7684\uff1a</p> <pre><code>...\n     7: func main() {\n=&gt;   8:         s := \"hello\"\n     9:         fmt.Println(s)\n    10: }\n(dlv) disass\n        ...\n=&gt;      main.go:8       0x679c92*       4881ec08010000                  sub rsp, 0x108\n        main.go:8       0x679c99        4889ac2400010000                mov qword ptr [rsp+0x100], rbp\n        ...\n        main.go:10      0x679ce0        e8db11f6ff                      call $runtime.convTstring                                                                                                       \n        main.go:10      0x679ce5        4889442428                      mov qword ptr [rsp+0x28], rax\n(dlv) b runtime.convTstring                                  \nCommand failed: Breakpoint exists at C:/Go/go1.20.4/src/runtime/iface.go:388 at 5daec6\n(dlv) c\n&gt; runtime.convTstring() c:/go/go1.20.4/src/runtime/iface.go:388 (hits goroutine(1):1 total:1) (PC: 0x5daec6)\n    ...\n=&gt; 388: func convTstring(val string) (x unsafe.Pointer) {\n   389:         if val == \"\" {\n   390:                 x = unsafe.Pointer(&amp;zeroVal[0])\n   391:         } else {\n   392:                 x = mallocgc(unsafe.Sizeof(val), stringType, true)\n   393:                 *(*string)(x) = val\n   ...\n   875: // Allocate an object of size bytes.\n   876: // Small objects are allocated from the per-P cache's free lists.\n   877: // Large objects (&gt; 32 kB) are allocated straight from the heap.\n   878: func mallocgc(size uintptr, typ *_type, needzero bool) unsafe.Pointer {\n=&gt; 879:         if gcphase == _GCmarktermination {\n   880:                 throw(\"mallocgc called with gcphase == _GCmarktermination\")\n   881:         }\n   882:\n   883:         if size == 0 {\n   884:                 return unsafe.Pointer(&amp;zerobase)\n(dlv) args\nsize = 16\ntyp = (*runtime._type)(0x682140)\nneedzero = true\n~r1 = unsafe.Pointer(0x10)\n...\n     7: func main() {\n     8:         s := \"hello\"\n     9:         fmt.Println(s)\n=&gt;  10: }\n(dlv) print s\n\"hello\"\n</code></pre> string \u7684\u5c3a\u5bf8\u662f 16 <p>\u572864\u4f4d\u7684\u673a\u5668\u4e0a\uff0cunsafe.Pointer\u7c7b\u578b\u5360\u75288\u5b57\u8282\uff0cint\u7c7b\u578b\u5360\u75288\u5b57\u8282\uff0c\u56e0\u6b64\u7ed3\u6784\u4f53\u7684\u603b\u5927\u5c0f\u4e3a16\u5b57\u8282</p> mallocgc \u65b9\u6cd5\u5982\u4f55\u51b3\u5b9a\u5f00\u8f9f\u7684\u5185\u5b58\u662f\u5728\u5806\u8fd8\u662f\u6808\u4e0a <p>\u5728Golang\u4e2d\uff0c\u5f53\u9700\u8981\u5206\u914d\u5185\u5b58\u4ee5\u5b58\u50a8\u5bf9\u8c61\u65f6\uff0c\u4f1a\u6839\u636e\u5bf9\u8c61\u7684\u5927\u5c0f\u91c7\u53d6\u4e0d\u540c\u7684\u5206\u914d\u65b9\u5f0f\u3002\u5177\u4f53\u6765\u8bf4\uff1a</p> <ul> <li>\u5bf9\u4e8e\u5c0f\u5bf9\u8c61\uff08\u5c0f\u4e8e\u7b49\u4e8e32 kB\uff09\uff0c\u5185\u5b58\u5206\u914d\u4f1a\u4ece\u6bcf\u4e2aP\uff08\u5904\u7406\u5668\uff09\u7684\u7f13\u5b58\u4e2d\u7684\u7a7a\u95f2\u5217\u8868\u4e2d\u5206\u914d\u3002\u6bcf\u4e2a\u5904\u7406\u5668\u90fd\u6709\u81ea\u5df1\u7684\u7f13\u5b58\uff0c\u5176\u4e2d\u5305\u542b\u4e86\u4e00\u7cfb\u5217\u4e0d\u540c\u5927\u5c0f\u7684\u7a7a\u95f2\u5185\u5b58\u5757\u3002\u8fd9\u79cd\u7f13\u5b58\u673a\u5236\u53ef\u4ee5\u63d0\u9ad8\u5c0f\u5bf9\u8c61\u7684\u5206\u914d\u6548\u7387\uff0c\u907f\u514d\u9891\u7e41\u5730\u5411\u5806\u7533\u8bf7\u5185\u5b58\u3002</li> <li>\u5bf9\u4e8e\u5927\u5bf9\u8c61\uff08\u5927\u4e8e32 kB\uff09\uff0c\u5185\u5b58\u5206\u914d\u4f1a\u76f4\u63a5\u4ece\u5806\uff08heap\uff09\u4e2d\u5206\u914d\u3002\u5806\u662f\u4e00\u4e2a\u52a8\u6001\u5206\u914d\u7684\u5185\u5b58\u533a\u57df\uff0c\u7528\u4e8e\u5b58\u50a8\u8f83\u5927\u7684\u5bf9\u8c61\u548c\u6570\u636e\u7ed3\u6784\u3002</li> </ul> <p>\u901a\u8fc7\u8fd9\u79cd\u5206\u914d\u7b56\u7565\uff0cGolang\u53ef\u4ee5\u5728\u5c0f\u5bf9\u8c61\u7684\u60c5\u51b5\u4e0b\u5feb\u901f\u5206\u914d\u5185\u5b58\uff0c\u800c\u5bf9\u4e8e\u8f83\u5927\u7684\u5bf9\u8c61\uff0c\u76f4\u63a5\u4ece\u5806\u4e2d\u5206\u914d\u80fd\u591f\u66f4\u6709\u6548\u5730\u5229\u7528\u5185\u5b58\u7a7a\u95f4\u3002</p>","tags":[]},{"location":"1.%E8%AF%AD%E8%A8%80%E5%9F%BA%E7%A1%80/%E7%B1%BB%E5%9E%8B/2.string/#22","title":"2.2 \u57fa\u672c\u64cd\u4f5c","text":"","tags":[]},{"location":"1.%E8%AF%AD%E8%A8%80%E5%9F%BA%E7%A1%80/%E7%B1%BB%E5%9E%8B/2.string/#_3","title":"\u62fc\u63a5","text":"<pre><code>package main\nimport (\n\"bytes\"\n\"fmt\"\n\"strings\"\n)\nfunc main() {\n// \u4f7f\u7528\u52a0\u53f7\u8fdb\u884c\u5b57\u7b26\u4e32\u62fc\u63a5\nstr1 := \"Hello\"\nstr2 := \"World\"\nresult := str1 + \" \" + str2\nfmt.Println(result)\n// \u4f7f\u7528 fmt.Sprintf \u8fdb\u884c\u5b57\u7b26\u4e32\u62fc\u63a5\nresult = fmt.Sprintf(\"%s %s\", str1, str2)\nfmt.Println(result)\n// \u4f7f\u7528 strings.Join \u8fdb\u884c\u5b57\u7b26\u4e32\u62fc\u63a5\nstrList := []string{str1, str2}\nresult = strings.Join(strList, \" \")\nfmt.Println(result)\n// \u4f7f\u7528 bytes.Buffer \u8fdb\u884c\u5b57\u7b26\u4e32\u62fc\u63a5\nvar buffer bytes.Buffer\nbuffer.WriteString(str1)\nbuffer.WriteString(\" \")\nbuffer.WriteString(str2)\nresult = buffer.String()\nfmt.Println(result)\n// \u4f7f\u7528 strings.Builder \u8fdb\u884c\u5b57\u7b26\u4e32\u62fc\u63a5\nvar builder strings.Builder\nbuilder.WriteString(str1)\nbuilder.WriteString(\" \")\nbuilder.WriteString(str2)\nresult = builder.String()\nfmt.Println(result)\n}\n</code></pre> <p>\u4e0a\u8ff0\u51e0\u79cd\u5b57\u7b26\u4e32\u62fc\u63a5\u65b9\u5f0f\u7684\u4f18\u70b9\u548c\u7f3a\u70b9\uff1a</p> \u65b9\u6cd5 \u4f18\u70b9 \u7f3a\u70b9 \u4f7f\u7528\u52a0\u53f7 <code>+</code> - \u7b80\u5355\u76f4\u89c2\u7684\u8bed\u6cd5- \u53ef\u4ee5\u76f4\u63a5\u62fc\u63a5\u591a\u4e2a\u5b57\u7b26\u4e32 - \u6027\u80fd\u8f83\u5dee\uff0c\u6bcf\u6b21\u62fc\u63a5\u90fd\u4f1a\u521b\u5efa\u65b0\u7684\u5b57\u7b26\u4e32\u5bf9\u8c61 \u4f7f\u7528 <code>fmt.Sprintf</code> - \u53ef\u4ee5\u4f7f\u7528\u683c\u5f0f\u5316\u5b57\u7b26\u4e32\u8fdb\u884c\u7075\u6d3b\u7684\u62fc\u63a5- \u652f\u6301\u591a\u79cd\u6570\u636e\u7c7b\u578b - \u76f8\u5bf9\u8f83\u6162\uff0c\u9700\u8981\u8fdb\u884c\u683c\u5f0f\u5316\u5b57\u7b26\u4e32\u7684\u89e3\u6790\u548c\u5904\u7406 \u4f7f\u7528 <code>strings.Join</code> - \u9ad8\u6548\u7684\u5b57\u7b26\u4e32\u62fc\u63a5\u65b9\u5f0f- \u9002\u7528\u4e8e\u62fc\u63a5\u5b57\u7b26\u4e32\u5207\u7247 - \u9700\u8981\u5c06\u5b57\u7b26\u4e32\u5143\u7d20\u8f6c\u6362\u4e3a\u5207\u7247\uff0c\u5e76\u4f7f\u7528\u5206\u9694\u7b26\u62fc\u63a5 \u4f7f\u7528 <code>bytes.Buffer</code> - \u9ad8\u6548\u7684\u5b57\u7b26\u4e32\u62fc\u63a5\u65b9\u5f0f- \u53ef\u4ee5\u8fde\u7eed\u8ffd\u52a0\u5b57\u7b26\u4e32 - \u9700\u8981\u989d\u5916\u7684\u5185\u5b58\u5206\u914d\uff0c\u9002\u7528\u4e8e\u5927\u91cf\u7684\u5b57\u7b26\u4e32\u62fc\u63a5\u64cd\u4f5c \u4f7f\u7528 <code>strings.Builder</code> - \u9ad8\u6548\u7684\u5b57\u7b26\u4e32\u62fc\u63a5\u65b9\u5f0f- \u53ef\u4ee5\u8fde\u7eed\u8ffd\u52a0\u5b57\u7b26\u4e32 - \u9700\u8981\u4f7f\u7528\u989d\u5916\u7684 <code>strings.Builder</code> \u5bf9\u8c61 <p>\u6bcf\u79cd\u65b9\u6cd5\u90fd\u6709\u81ea\u5df1\u7684\u4f18\u70b9\u548c\u7f3a\u70b9\uff0c\u5177\u4f53\u4f7f\u7528\u54ea\u79cd\u65b9\u5f0f\u53d6\u51b3\u4e8e\u4f60\u7684\u9700\u6c42\u548c\u6027\u80fd\u8981\u6c42\u3002\u4e00\u822c\u6765\u8bf4\uff0c\u5bf9\u4e8e\u7b80\u5355\u7684\u5b57\u7b26\u4e32\u62fc\u63a5\uff0c\u4f7f\u7528\u52a0\u53f7 <code>+</code> \u6216 <code>fmt.Sprintf</code> \u662f\u65b9\u4fbf\u5feb\u6377\u7684\u9009\u62e9\u3002\u5bf9\u4e8e\u5927\u91cf\u7684\u5b57\u7b26\u4e32\u62fc\u63a5\u64cd\u4f5c\u6216\u9700\u8981\u9ad8\u6027\u80fd\u7684\u573a\u666f\uff0c\u53ef\u4ee5\u8003\u8651\u4f7f\u7528 <code>bytes.Buffer</code> \u6216 <code>strings.Builder</code>\u3002\u5982\u679c\u8981\u62fc\u63a5\u5b57\u7b26\u4e32\u5207\u7247\u6216\u53ef\u53d8\u6570\u91cf\u7684\u5b57\u7b26\u4e32\u53c2\u6570\uff0c\u53ef\u4ee5\u4f7f\u7528 <code>strings.Join</code>\u3002</p>","tags":[]},{"location":"1.%E8%AF%AD%E8%A8%80%E5%9F%BA%E7%A1%80/%E7%B1%BB%E5%9E%8B/2.string/#_4","title":"\u8f6c\u6362","text":"<ol> <li> <p><code>string</code> \u4e0e <code>[]byte</code> \u7684\u8f6c\u6362</p> <pre><code>func conv() {\ns := \"hello\"\ns2Bs := []byte(s)\nbs2S := string(s2Bs)\n}\n</code></pre> </li> <li> <p><code>string</code> \u4e0e <code>[]rune</code> \u7684\u8f6c\u6362</p> <p>\u4e0e 1. \u76f8\u540c</p> </li> <li> <p><code>[]rune</code> \u4e0e <code>[]byte</code> \u7684\u8f6c\u6362</p> <p>\u8fd9\u4e24\u8005\u4e4b\u95f4\u662f\u4e0d\u80fd\u76f4\u63a5\u8f6c\u6362\u7684\uff0c\u53ef\u4ee5\u4f7f\u7528 <code>unicode/utf8</code> \u5e93\u51fd\u6570\u6765\u5b9e\u73b0\u8fd9\u4e9b\u8f6c\u6362</p> <pre><code>func Runes2Bytes(rs []rune) []byte {\nn := 0\nfor _, r := range rs {\nn += utf8.RuneLen(r)\n}\nn, bs := 0, make([]byte, n)\nfor _, r := range rs {\nn += utf8.EncodeRune(bs[n:], r)\n}\nreturn bs\n}\n</code></pre> </li> </ol> go \u7f16\u8bd1\u5668\u9488\u5bf9\u4e00\u4e9b\u60c5\u51b5\u505a\u4e86\u4f18\u5316 <p><code>for-range</code> \u4e2d\u5c06 <code>string</code> \u8f6c\u6210 <code>[]byte</code> \u662f\u4e0d\u9700\u8981\u505a\u6df1\u62f7\u8d1d\u7684</p> <pre><code>func main() {\nvar str = \"world\"\nfor i, b := range []byte(str) {\n//...\n}\n}\n</code></pre> <p>\u4ee5\u4e0b\u4e24\u79cd\u4ece <code>[]byte</code> \u5230 <code>string</code> \u7684\u60c5\u51b5\u4e5f\u662f\u4e0d\u9700\u8981\u6df1\u62f7\u8d1d\u7684</p> <pre><code>func fc() {\n// \u4e0b\u9762\u7684\u56db\u4e2a\u8f6c\u6362\u90fd\u4e0d\u9700\u8981\u6df1\u590d\u5236\u3002\n// \u4e00\u4e2a\uff08\u81f3\u5c11\u6709\u4e00\u4e2a\u88ab\u8854\u63a5\u7684\u5b57\u7b26\u4e32\u503c\u4e3a\u975e\u7a7a\u5b57\u7b26\u4e32\u5e38\u91cf\u7684\uff09\u5b57\u7b26\u4e32\u8854\u63a5\u8868\u8fbe\u5f0f\u4e2d\u7684\u4ece\u5b57\u8282\u5207\u7247\u5230\u5b57\u7b26\u4e32\u7684\u8f6c\u6362\u4e0d\u9700\u8981\u6df1\u62f7\u8d1d\nif string(x) != string(y) {\ns = (\" \" + string(x) + string(y))[1:]\n}\n}\nfunc fd() {\n// \u4e24\u4e2a\u5728\u6bd4\u8f83\u8868\u8fbe\u5f0f\u4e2d\u7684\u8f6c\u6362\u4e0d\u9700\u8981\u6df1\u590d\u5236\uff0c\n// \u4f46\u4e24\u4e2a\u5b57\u7b26\u4e32\u8854\u63a5\u4e2d\u7684\u8f6c\u6362\u4ecd\u9700\u8981\u6df1\u590d\u5236\u3002\n// \u8bf7\u6ce8\u610f\u6b64\u5b57\u7b26\u4e32\u8854\u63a5\u548cfc\u4e2d\u7684\u8854\u63a5\u7684\u5dee\u522b\u3002\nif string(x) != string(y) {\ns = string(x) + string(y)\n}\n}\n</code></pre> string \u7684\u4e00\u4e2a\u8bed\u6cd5\u7cd6 <pre><code>hello := []byte(\"Hello \")\nworld := \"world!\"\n// helloWorld := append(hello, []byte(world)...) // \u6b63\u5e38\u7684\u8bed\u6cd5\nhelloWorld := append(hello, world...)            // \u8bed\u6cd5\u7cd6\n</code></pre>","tags":[]},{"location":"1.%E8%AF%AD%E8%A8%80%E5%9F%BA%E7%A1%80/%E7%B1%BB%E5%9E%8B/2.string/#_5","title":"\u6bd4\u8f83","text":"<p>\u4e24\u4e2a\u5b57\u7b26\u4e32\u901a\u5e38\u4f7f\u7528 <code>==</code> \u8fdb\u884c\u6bd4\u8f83\uff0c\u6bd4\u8f83\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u53d6\u51b3\u4e8e <code>\u6301\u6709\u7684\u6307\u9488</code> \u662f\u5426\u76f8\u540c\uff0c\u5982\u679c\u76f8\u540c\uff0c\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a <code>O(1)</code>\uff0c\u5982\u679c\u4e0d\u540c\uff0c\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a <code>O(n)</code></p> <pre><code>graph LR\na[s1.l==s2.l]---&gt;|no|endF[diff]\na--&gt;|yes|c[s1.p==s2.p]--&gt;|yes|endS[same]\nc--&gt;|no|d[comp every ch]--&gt;endS\nd--&gt;endF</code></pre>","tags":[]},{"location":"1.%E8%AF%AD%E8%A8%80%E5%9F%BA%E7%A1%80/%E7%B1%BB%E5%9E%8B/2.string/#23","title":"2.3 \u904d\u5386","text":"<p><pre><code>func main() {\ns := \"hi, \u4f60\u597d!\"\nfor i := 0; i &lt; len(s); i++ {\nfmt.Printf(\"%c\", s[i]) // byte\n}\nfmt.Println()\nfor _, v := range s {\nfmt.Printf(\"%c\", v) // rune\n}\n}\n</code></pre> \u8f93\u51fa\uff1a <pre><code>hi, \u00e4\u00bd\u00a0\u00e5\u00a5\u00bd!\nhi, \u4f60\u597d!\n</code></pre></p>","tags":[]},{"location":"1.%E8%AF%AD%E8%A8%80%E5%9F%BA%E7%A1%80/%E7%B1%BB%E5%9E%8B/3.slice/","title":"slice","text":"<p>go version is go1.20.4</p>","tags":[]},{"location":"1.%E8%AF%AD%E8%A8%80%E5%9F%BA%E7%A1%80/%E7%B1%BB%E5%9E%8B/3.slice/#_1","title":"\u4e00\u3001\u5e95\u5c42\u5b58\u50a8","text":"<p>\u5728Go\u8bed\u8a00\u4e2d\uff0cSlice\uff08\u5207\u7247\uff09\u662f\u4e00\u4e2a\u7075\u6d3b\u7684\u3001\u53ef\u53d8\u957f\u5ea6\u7684\u5e8f\u5217\u3002Slice\u63d0\u4f9b\u4e86\u5bf9\u6570\u7ec4\u6216\u5176\u4ed6\u5207\u7247\u7684\u90e8\u5206\u6216\u5168\u90e8\u5143\u7d20\u7684\u5f15\u7528\uff0c\u53ef\u4ee5\u52a8\u6001\u5730\u589e\u52a0\u6216\u51cf\u5c11\u5176\u957f\u5ea6\u3002Slice\u662f\u6784\u5efa\u5728\u6570\u7ec4\u4e4b\u4e0a\u7684\u4e00\u79cd\u62bd\u8c61\u6570\u636e\u7c7b\u578b\uff0c\u63d0\u4f9b\u4e86\u66f4\u4fbf\u6377\u548c\u7075\u6d3b\u7684\u6570\u7ec4\u64cd\u4f5c\u65b9\u5f0f\u3002</p> <p><code>slice</code> \u7684\u8fd0\u884c\u65f6\u7ed3\u6784\uff1a</p> <pre><code>type slice struct {\narray unsafe.Pointer\nlen   int\ncap   int\n}\n</code></pre> <p> </p> slice \u4e0e\u5e95\u5c42\u6570\u7ec4\u7684\u5173\u7cfb","tags":[]},{"location":"1.%E8%AF%AD%E8%A8%80%E5%9F%BA%E7%A1%80/%E7%B1%BB%E5%9E%8B/3.slice/#_2","title":"\u4e8c\u3001\u5e38\u89c1\u64cd\u4f5c","text":"","tags":[]},{"location":"1.%E8%AF%AD%E8%A8%80%E5%9F%BA%E7%A1%80/%E7%B1%BB%E5%9E%8B/3.slice/#21-make-slice","title":"2.1 \u4f7f\u7528 make \u521b\u5efa\u548c\u521d\u59cb\u5316 slice","text":"<pre><code>func main() {\na := make([]int, 1)\n}\n</code></pre> <p>\u8fd9\u6761\u8bed\u53e5\u4f1a\u8c03\u7528 <code>makeslice</code> \u65b9\u6cd5:</p> <pre><code>func makeslice(et *_type, len, cap int) unsafe.Pointer {\nmem, overflow := math.MulUintptr(et.size, uintptr(cap))\nif overflow || mem &gt; maxAlloc || len &lt; 0 || len &gt; cap {\n// NOTE: Produce a 'len out of range' error instead of a\n// 'cap out of range' error when someone does make([]T, bignumber).\n// 'cap out of range' is true too, but since the cap is only being\n// supplied implicitly, saying len is clearer.\n// See golang.org/issue/4085.\nmem, overflow := math.MulUintptr(et.size, uintptr(len))\nif overflow || mem &gt; maxAlloc || len &lt; 0 {\npanicmakeslicelen()\n}\npanicmakeslicecap()\n}\nreturn mallocgc(mem, et, true)\n}\n</code></pre> <p>\u8fd9\u6bb5\u4ee3\u7801\u662fGo\u8bed\u8a00\u4e2d\u7684\u5185\u90e8\u51fd\u6570<code>makeslice</code>\u7684\u5b9e\u73b0\u3002\u5b83\u7528\u4e8e\u521b\u5efa\u4e00\u4e2a\u5207\u7247\uff08Slice\uff09\uff0c\u5e76\u8fd4\u56de\u5207\u7247\u5e95\u5c42\u6570\u636e\u7684\u6307\u9488\u3002</p> <p>\u4ee3\u7801\u89e3\u91ca\u5982\u4e0b\uff1a</p> <ol> <li> <p>\u51fd\u6570\u7b7e\u540d\uff1a<code>func makeslice(et *_type, len, cap int) unsafe.Pointer</code>\uff0c\u5b83\u63a5\u53d7\u4e09\u4e2a\u53c2\u6570\uff1a<code>et</code>\u8868\u793a\u5207\u7247\u5143\u7d20\u7c7b\u578b\u7684\u53cd\u5c04\u4fe1\u606f\uff0c<code>len</code>\u8868\u793a\u5207\u7247\u7684\u957f\u5ea6\uff0c<code>cap</code>\u8868\u793a\u5207\u7247\u7684\u5bb9\u91cf\u3002</p> </li> <li> <p>\u53c2\u6570\u6821\u9a8c\uff1a\u4ee3\u7801\u9996\u5148\u8fdb\u884c\u4e86\u4e00\u7cfb\u5217\u7684\u53c2\u6570\u6821\u9a8c\u3002\u5b83\u4f7f\u7528<code>math.MulUintptr</code>\u51fd\u6570\u8ba1\u7b97\u5207\u7247\u7684\u5185\u5b58\u5927\u5c0f\uff0c\u6839\u636e\u5207\u7247\u5143\u7d20\u7c7b\u578b\u7684\u5927\u5c0f\uff08<code>et.size</code>\uff09\u548c\u5bb9\u91cf\uff08<code>cap</code>\uff09\u76f8\u4e58\u3002\u5982\u679c\u8ba1\u7b97\u7ed3\u679c\u6ea2\u51fa\u3001\u8d85\u8fc7\u4e86\u6700\u5927\u5185\u5b58\u5206\u914d\u9650\u5236\uff08<code>maxAlloc</code>\uff09\u6216\u8005\u957f\u5ea6\uff08<code>len</code>\uff09\u8d85\u51fa\u4e86\u5bb9\u91cf\uff08<code>cap</code>\uff09\uff0c\u5219\u4f1a\u89e6\u53d1<code>panic</code>\uff0c\u629b\u51fa\u76f8\u5173\u9519\u8bef\u3002</p> </li> <li> <p>\u5185\u5b58\u5206\u914d\uff1a\u5982\u679c\u53c2\u6570\u6821\u9a8c\u901a\u8fc7\uff0c\u5c31\u4f1a\u8c03\u7528<code>mallocgc</code>\u51fd\u6570\u6765\u5206\u914d\u5207\u7247\u7684\u5185\u5b58\u3002\u8fd9\u91cc\u7684<code>mallocgc</code>\u662fGo\u8bed\u8a00\u4e2d\u7684\u5185\u5b58\u5206\u914d\u5668\uff0c\u5b83\u6839\u636e\u6307\u5b9a\u7684\u5185\u5b58\u5927\u5c0f\uff08<code>mem</code>\uff09\u548c\u5143\u7d20\u7c7b\u578b\uff08<code>et</code>\uff09\u6765\u5206\u914d\u5185\u5b58\uff0c\u5e76\u8fd4\u56de\u6307\u5411\u5207\u7247\u5e95\u5c42\u6570\u636e\u7684\u6307\u9488\u3002</p> </li> <li> <p>\u8fd4\u56de\u503c\uff1a<code>makeslice</code>\u51fd\u6570\u6700\u7ec8\u8fd4\u56de\u5206\u914d\u7684\u5185\u5b58\u6307\u9488\uff08<code>unsafe.Pointer</code>\u7c7b\u578b\uff09\uff0c\u5b83\u53ef\u4ee5\u88ab\u8f6c\u6362\u4e3a\u5207\u7247\u7c7b\u578b\u3002</p> </li> </ol> mallocgc \u7684\u5927\u81f4\u8fc7\u7a0b <p><code>mallocgc</code>\u51fd\u6570\u7528\u4e8e\u5728\u5806\u6216\u6808\u4e0a\u5206\u914d\u5185\u5b58\u3002\u8be5\u51fd\u6570\u63a5\u53d7\u4e09\u4e2a\u53c2\u6570\uff1a<code>size</code>\u8868\u793a\u8981\u5206\u914d\u7684\u5185\u5b58\u5927\u5c0f\uff0c<code>typ</code>\u8868\u793a\u5206\u914d\u5bf9\u8c61\u7684\u7c7b\u578b\uff0c<code>needzero</code>\u8868\u793a\u662f\u5426\u9700\u8981\u5c06\u5185\u5b58\u6e05\u96f6\u3002</p> <p>\u9996\u5148\uff0c\u51fd\u6570\u68c0\u67e5\u5f53\u524d\u7684<code>gcphase</code>\uff08\u5783\u573e\u56de\u6536\u7684\u9636\u6bb5\uff09\uff0c\u5982\u679c<code>gcphase</code>\u4e3a<code>_GCmarktermination</code>\uff0c\u5219\u629b\u51fa\u5f02\u5e38\u3002</p> <p>\u63a5\u4e0b\u6765\uff0c\u51fd\u6570\u5904\u7406\u4e00\u4e9b\u7279\u6b8a\u60c5\u51b5\uff0c\u4f8b\u5982<code>size</code>\u4e3a0\u65f6\uff0c\u76f4\u63a5\u8fd4\u56de\u4e00\u4e2a\u6307\u5411<code>zerobase</code>\u7684\u6307\u9488\uff0c\u8868\u793a\u5206\u914d\u4e86\u4e00\u4e2a\u5927\u5c0f\u4e3a0\u7684\u5bf9\u8c61\u3002</p> <p>\u7136\u540e\uff0c\u51fd\u6570\u83b7\u53d6\u5f53\u524d\u7684<code>G</code>\uff08goroutine\uff09\u5e76\u5c06<code>mallocing</code>\u6807\u5fd7\u8bbe\u7f6e\u4e3a1\uff0c\u4ee5\u9632\u6b62\u5728\u5206\u914d\u8fc7\u7a0b\u4e2d\u88ab\u5783\u573e\u56de\u6536\u5668\u62a2\u5360\u3002\u63a5\u7740\uff0c\u51fd\u6570\u6839\u636e\u5206\u914d\u5927\u5c0f\u9009\u62e9\u4e0d\u540c\u7684\u8def\u5f84\u8fdb\u884c\u5185\u5b58\u5206\u914d\u3002</p> <p>\u5bf9\u4e8e\u5c0f\u5bf9\u8c61\uff0c\u5206\u914d\u8fc7\u7a0b\u5305\u62ec\u4ee5\u4e0b\u6b65\u9aa4\uff1a - \u5982\u679c\u5bf9\u8c61\u662f\u65e0\u626b\u63cf\uff08\u6ca1\u6709\u6307\u9488\uff09\u7684\u5e76\u4e14\u5c0f\u4e8e\u7b49\u4e8emaxTinySize\uff0816\u5b57\u8282\uff09\uff0c\u5219\u4f7f\u7528tiny allocator\u8fdb\u884c\u5206\u914d\u3002tiny allocator\u5c06\u591a\u4e2a\u5c0f\u7684\u5206\u914d\u8bf7\u6c42\u5408\u5e76\u4e3a\u4e00\u4e2a\u5185\u5b58\u5757\uff0c\u5e76\u5728\u6240\u6709\u5b50\u5bf9\u8c61\u90fd\u4e0d\u53ef\u8fbe\u65f6\u91ca\u653e\u8be5\u5185\u5b58\u5757\u3002\u5bf9\u8c61\u4e0d\u9700\u8981\u663e\u5f0f\u91ca\u653e\u3002 - \u5426\u5219\uff0c\u6839\u636e\u5bf9\u8c61\u7684\u5927\u5c0f\u9009\u62e9\u9002\u5f53\u7684size class\uff0c\u5e76\u4ecemcache\u7684free list\u4e2d\u5206\u914d\u5185\u5b58\u3002\u5982\u679c\u9700\u8981\u6e05\u96f6\u5185\u5b58\uff0c\u5219\u8fdb\u884c\u6e05\u96f6\u64cd\u4f5c\u3002</p> <p>\u5bf9\u4e8e\u5927\u5bf9\u8c61\uff08\u5927\u4e8e32kB\uff09\uff0c\u5206\u914d\u8fc7\u7a0b\u5305\u62ec\u4ee5\u4e0b\u6b65\u9aa4\uff1a - \u5982\u679c\u5783\u573e\u56de\u6536\u6b63\u5728\u8fdb\u884c\uff0c\u5219\u5206\u914d\u4e00\u4e2alarge object span\uff0c\u5e76\u5c06\u5bf9\u8c61\u6807\u8bb0\u4e3a\u9ed1\u8272\uff08\u5728GC\u8fc7\u7a0b\u4e2d\u5206\u914d\u7684\u5bf9\u8c61\uff09\u3002 - \u5426\u5219\uff0c\u5206\u914d\u4e00\u4e2alarge object span\uff0c\u5e76\u5c06\u5bf9\u8c61\u6807\u8bb0\u4e3a\u767d\u8272\uff08\u975eGC\u8fc7\u7a0b\u4e2d\u5206\u914d\u7684\u5bf9\u8c61\uff09\u3002</p> <p>\u63a5\u4e0b\u6765\uff0c\u51fd\u6570\u5904\u7406\u5206\u914d\u540e\u7684\u4e00\u4e9b\u540e\u7eed\u64cd\u4f5c\uff0c\u4f8b\u5982\u66f4\u65b0\u7edf\u8ba1\u4fe1\u606f\u3001\u5904\u7406race detector\u548cmemory sanitizer\u7b49\u3002</p> <p>\u6700\u540e\uff0c\u51fd\u6570\u6839\u636e\u9700\u8981\u8c03\u7528\u5783\u573e\u56de\u6536\u5668\uff0c\u5e76\u8fd4\u56de\u5206\u914d\u7684\u5185\u5b58\u6307\u9488\u3002</p> <p>\u603b\u4e4b\uff0c\u8fd9\u6bb5\u4ee3\u7801\u5b9e\u73b0\u4e86Go\u8bed\u8a00\u7684\u5185\u5b58\u5206\u914d\u5668\u7684\u6838\u5fc3\u903b\u8f91\uff0c\u6839\u636e\u5bf9\u8c61\u5927\u5c0f\u9009\u62e9\u4e0d\u540c\u7684\u5206\u914d\u8def\u5f84\uff0c\u5e76\u5904\u7406\u4e00\u4e9b\u7279\u6b8a\u60c5\u51b5\u548c\u540e\u7eed\u64cd\u4f5c\u3002</p>","tags":[]},{"location":"1.%E8%AF%AD%E8%A8%80%E5%9F%BA%E7%A1%80/%E7%B1%BB%E5%9E%8B/3.slice/#22","title":"2.2 \u5220\u9664\u5143\u7d20","text":"<ol> <li> <p>\u4fdd\u8bc1\u5269\u4e0b\u5143\u7d20\u6709\u5e8f</p> <pre><code>s = append(s[:i], s[i+1:]...)\n</code></pre> </li> <li> <p>\u4e0d\u4fdd\u8bc1\u5269\u4e0b\u5143\u7d20\u6709\u5e8f</p> <pre><code>s[i] = s[len(s)-1]\ns = s[:len(s)-1]\n</code></pre> </li> </ol>","tags":[]},{"location":"1.%E8%AF%AD%E8%A8%80%E5%9F%BA%E7%A1%80/%E7%B1%BB%E5%9E%8B/3.slice/#23","title":"2.3 \u514b\u9686","text":"<pre><code>sClone := make([]T, len(s))\ncopy(sCLone, s)\n</code></pre>","tags":[]},{"location":"1.%E8%AF%AD%E8%A8%80%E5%9F%BA%E7%A1%80/%E7%B1%BB%E5%9E%8B/3.slice/#_3","title":"\u4e09\u3001\u7279\u6027","text":"","tags":[]},{"location":"1.%E8%AF%AD%E8%A8%80%E5%9F%BA%E7%A1%80/%E7%B1%BB%E5%9E%8B/3.slice/#31","title":"3.1 \u52a8\u6001\u6269\u5bb9\u673a\u5236","text":"<ul> <li>\u4ec0\u4e48\u65f6\u5019\u6269\u5bb9</li> <li>\u7b56\u7565\u662f\u4ec0\u4e48</li> </ul> <p>slice \u5927\u81f4\u7684\u6269\u5bb9\u8fc7\u7a0b\uff1a</p> <ol> <li> <p>\u9996\u5148\uff0c\u5f53\u4e00\u4e2aslice\u7684\u957f\u5ea6\u8d85\u8fc7\u5176\u5bb9\u91cf\u65f6\uff0cGo\u8bed\u8a00\u4f1a\u4e3a\u8be5slice\u5206\u914d\u4e00\u4e2a\u66f4\u5927\u7684\u5e95\u5c42\u6570\u7ec4\u3002\u65b0\u5206\u914d\u7684\u5e95\u5c42\u6570\u7ec4\u957f\u5ea6\u901a\u5e38\u662f\u5f53\u524d\u5bb9\u91cf\u7684\u4e24\u500d\uff0c\u4f46\u662f\u5f53slice\u7684\u957f\u5ea6\u5f88\u5c0f\uff08\u5c0f\u4e8e1024\uff09\u65f6\uff0c\u6bcf\u6b21\u6269\u5bb9\u540e\u7684\u957f\u5ea6\u4f1a\u6bd4\u5f53\u524d\u5bb9\u91cf\u589e\u52a0\u4e00\u500d\u3002</p> </li> <li> <p>\u7136\u540e\uff0cGo\u8bed\u8a00\u4f1a\u5c06\u539f\u59cb\u6570\u636e\u590d\u5236\u5230\u65b0\u5206\u914d\u7684\u5e95\u5c42\u6570\u7ec4\u4e2d\u3002</p> </li> <li> <p>\u6700\u540e\uff0cGo\u8bed\u8a00\u4f1a\u66f4\u65b0slice\u7684\u957f\u5ea6\u548c\u5bb9\u91cf\u4fe1\u606f\uff0c\u4f7f\u5176\u53cd\u6620\u65b0\u7684\u5e95\u5c42\u6570\u7ec4\u3002</p> </li> </ol> <p>\u8fd9\u4e2a\u81ea\u52a8\u6269\u5bb9\u7684\u8fc7\u7a0b\u662f\u900f\u660e\u7684\uff0c\u5f00\u53d1\u8005\u65e0\u9700\u624b\u52a8\u64cd\u4f5c\uff0c\u53ef\u4ee5\u901a\u8fc7\u4f7f\u7528append()\u51fd\u6570\u6765\u6dfb\u52a0\u5143\u7d20\u5230slice\u4e2d\uff0cGo\u8bed\u8a00\u4f1a\u6839\u636e\u9700\u8981\u81ea\u52a8\u6269\u5bb9\u3002\u4f8b\u5982\uff1a</p> <pre><code>slice := []int{1, 2, 3}\nslice = append(slice, 4) // \u6dfb\u52a0\u5143\u7d204\u5230slice\u4e2d\n</code></pre> <p>\u5728\u8fd9\u4e2a\u4f8b\u5b50\u4e2d\uff0c\u5982\u679cslice\u7684\u5bb9\u91cf\u4e0d\u8db3\u4ee5\u5bb9\u7eb3\u65b0\u5143\u7d204\uff0c\u90a3\u4e48Go\u8bed\u8a00\u4f1a\u4e3aslice\u5206\u914d\u4e00\u4e2a\u65b0\u7684\u5e95\u5c42\u6570\u7ec4\uff0c\u957f\u5ea6\u4e3a\u539f\u6765\u7684\u4e24\u500d\uff0c\u5e76\u5c06\u539f\u59cb\u6570\u636e\u590d\u5236\u5230\u65b0\u6570\u7ec4\u4e2d\u3002\u7136\u540e\uff0c\u65b0\u5143\u7d204\u4f1a\u88ab\u6dfb\u52a0\u5230\u65b0\u6570\u7ec4\u7684\u672b\u5c3e\uff0c\u6700\u540e\u66f4\u65b0slice\u7684\u957f\u5ea6\u548c\u5bb9\u91cf\u4fe1\u606f\u3002</p> <p>\u7531\u4e8e\u81ea\u52a8\u6269\u5bb9\u53ef\u80fd\u6d89\u53ca\u5230\u5185\u5b58\u5206\u914d\u548c\u6570\u636e\u590d\u5236\uff0c\u6240\u4ee5\u9891\u7e41\u7684\u6269\u5bb9\u64cd\u4f5c\u53ef\u80fd\u4f1a\u5bfc\u81f4\u6027\u80fd\u95ee\u9898\u3002\u4e3a\u4e86\u907f\u514d\u9891\u7e41\u7684\u6269\u5bb9\uff0c\u53ef\u4ee5\u901a\u8fc7\u9884\u5148\u8bbe\u7f6eslice\u7684\u5bb9\u91cf\uff0c\u4ee5\u51cf\u5c11\u6269\u5bb9\u7684\u6b21\u6570\u3002\u53ef\u4ee5\u4f7f\u7528\u5185\u7f6e\u51fd\u6570<code>make()</code>\u6765\u521b\u5efa\u6307\u5b9a\u957f\u5ea6\u548c\u5bb9\u91cf\u7684slice\uff0c\u4f8b\u5982\uff1a</p> <pre><code>slice := make([]int, 0, 10) // \u521b\u5efa\u957f\u5ea6\u4e3a0\uff0c\u5bb9\u91cf\u4e3a10\u7684slice\n</code></pre> <p>\u5728\u8fd9\u4e2a\u4f8b\u5b50\u4e2d\uff0cslice\u7684\u957f\u5ea6\u4e3a0\uff0c\u4f46\u662f\u5b83\u7684\u5bb9\u91cf\u4e3a10\uff0c\u8fd9\u610f\u5473\u7740\u5b83\u53ef\u4ee5\u5bb9\u7eb3\u6700\u591a10\u4e2a\u5143\u7d20\u3002\u5f53\u9700\u8981\u6dfb\u52a0\u5143\u7d20\u5230slice\u65f6\uff0c\u5982\u679c\u5bb9\u91cf\u4e0d\u8db3\uff0cGo\u8bed\u8a00\u4f1a\u81ea\u52a8\u6269\u5bb9\uff0c\u4f46\u662f\u6269\u5bb9\u7684\u6b21\u6570\u4f1a\u51cf\u5c11\uff0c\u4ece\u800c\u63d0\u9ad8\u6027\u80fd\u3002</p> <p>\u66f4\u8be6\u7ec6\u7684\u6269\u5bb9\u8fc7\u7a0b\uff1aTODO</p>","tags":[]},{"location":"1.%E8%AF%AD%E8%A8%80%E5%9F%BA%E7%A1%80/%E7%B1%BB%E5%9E%8B/3.slice/#32-slice","title":"3.2 \u4f20\u9012\u548c\u4fee\u6539 slice \u7684\u884c\u4e3a","text":"","tags":[]},{"location":"1.%E8%AF%AD%E8%A8%80%E5%9F%BA%E7%A1%80/%E7%B1%BB%E5%9E%8B/3.slice/#33-slice","title":"3.3 \u5982\u4f55\u907f\u514d slice \u7684\u5185\u5b58\u6cc4\u6f0f\u548c\u4e0d\u5fc5\u8981\u7684\u62f7\u8d1d","text":"<ol> <li> <p>\u907f\u514d\u6682\u65f6\u6027\u7684\u5185\u5b58\u6cc4\u6f0f</p> <p>\u5982\u679c\u5207\u7247\u5143\u7d20\u5f15\u7528\u7740\u5176\u4ed6\u503c\uff08\u5982\u6307\u9488\u3001\u5207\u7247\u3001\u6620\u5c04\uff09\uff0c\u5e94\u8be5\u91cd\u7f6e\u591a\u51fa\u6765\u7684\u5143\u7d20\u69fd\u4e0a\u7684\u5143\u7d20\u503c\uff0c\u907f\u514d\u6682\u65f6\u6027\u7684\u5185\u5b58\u6cc4\u6f0f</p> <pre><code>type Person struct {\nName string\nAge  int\n}\nfunc main() {\npeople := []*Person{\n{Name: \"Alice\", Age: 25},\n{Name: \"Bob\", Age: 30},\n{Name: \"Charlie\", Age: 35},\n}\n// \u5220\u9664\u7b2c\u4e8c\u4e2a\u5143\u7d20\ncopy(people[1:], people[2:])\npeople[len(people)-1] = nil // \u5c06\u6700\u540e\u4e00\u4e2a\u5143\u7d20\u8bbe\u7f6e\u4e3a\u96f6\u503c\npeople = people[:len(people)-1]\n// \u5904\u7406\u88ab\u5220\u9664\u7684\u5143\u7d20\n// ...\n}\n</code></pre> <p>\u5728\u4e0a\u9762\u7684\u793a\u4f8b\u4e2d\uff0c\u6211\u4eec\u4f7f\u7528 copy \u51fd\u6570\u5c06\u7b2c\u4e09\u4e2a\u5143\u7d20\u590d\u5236\u5230\u7b2c\u4e8c\u4e2a\u5143\u7d20\u7684\u4f4d\u7f6e\uff0c\u5e76\u5c06\u6700\u540e\u4e00\u4e2a\u5143\u7d20\u8bbe\u7f6e\u4e3a\u96f6\u503c\u3002\u8fd9\u6837\u505a\u53ef\u4ee5\u786e\u4fdd\u88ab\u5220\u9664\u7684\u5143\u7d20\u6240\u5f15\u7528\u7684\u503c\u88ab\u53ca\u65f6\u91ca\u653e\uff0c\u4ece\u800c\u907f\u514d\u5185\u5b58\u6cc4\u6f0f</p> </li> </ol>","tags":[]},{"location":"1.%E8%AF%AD%E8%A8%80%E5%9F%BA%E7%A1%80/%E7%B1%BB%E5%9E%8B/3.slice/#34","title":"3.4 \u9ad8\u5e76\u53d1\u73af\u5883\u4e0b\u7684\u5b89\u5168\u4f7f\u7528\u548c\u6027\u80fd\u8003\u8651","text":"","tags":[]},{"location":"1.%E8%AF%AD%E8%A8%80%E5%9F%BA%E7%A1%80/%E7%B1%BB%E5%9E%8B/4.struct/","title":"struct(TODO)","text":"<p>go version is go1.20.4</p> <p>todo</p>","tags":[]},{"location":"1.%E8%AF%AD%E8%A8%80%E5%9F%BA%E7%A1%80/%E7%B1%BB%E5%9E%8B/5.map/","title":"map","text":"","tags":[]},{"location":"1.%E8%AF%AD%E8%A8%80%E5%9F%BA%E7%A1%80/%E7%B1%BB%E5%9E%8B/5.map/#_1","title":"\u4e00\u3001\u5bf9\u54c8\u5e0c\u8868\u7684\u56de\u987e","text":"<p>\u4e00\u79cd\u6700\u7b80\u5355\u7684\u60c5\u51b5\uff0c\u662f\u4f7f\u7528\u6570\u7ec4\u6765\u5b9e\u73b0\u54c8\u5e0c\u8868\uff1a</p> <p> </p> <p><code>\u54c8\u5e0c\u51b2\u7a81</code> \u7684\u4ea7\u751f\uff1a\u591a\u4e2a key \u7ecf\u8fc7\u54c8\u5e0c\u51fd\u6570\u4e4b\u540e\u7684\u7ed3\u679c\u76f8\u540c</p> <p>\u54c8\u5e0c\u51b2\u7a81\u5982\u4f55\u89e3\u51b3\uff1a - <code>\u6269\u5927\u5bb9\u91cf</code> - <code>\u4f18\u5316\u54c8\u5e0c\u8868\u7684\u8868\u793a\u6765\u7f13\u89e3\u54c8\u5e0c\u51b2\u7a81</code>     - \u94fe\u5f0f\u5730\u5740     - \u5f00\u653e\u5bfb\u5740</p> <p><code>\u8d1f\u8f7d\u56e0\u5b50</code>\uff1a[<code>\u5143\u7d20\u6570\u91cf</code>]/[<code>\u6876\u6570\u91cf</code>]\uff0c\u901a\u5e38\u7528\u8d1f\u8f7d\u56e0\u5b50\u6765\u63cf\u8ff0\u54c8\u5e0c\u8868\u4e2d\u51b2\u7a81\u4ea7\u751f\u7684\u4e25\u91cd\u7a0b\u5ea6</p>","tags":[]},{"location":"1.%E8%AF%AD%E8%A8%80%E5%9F%BA%E7%A1%80/%E7%B1%BB%E5%9E%8B/5.map/#-","title":"\u51b2\u7a81\u89e3\u51b3 - \u94fe\u5f0f\u5730\u5740","text":"<p>\u5f53\u51b2\u7a81\u53d1\u751f\uff0c\u5373\u4e0d\u540c\u7684 key \u88ab\u6620\u5c04\u5230\u540c\u4e00\u4e2a\u503c\uff0c\u5c06 <code>\u5355\u4e2a\u5143\u7d20\u8f6c\u53d8\u6210\u94fe\u8868</code>\uff0c\u53d1\u751f\u51b2\u7a81\u7684\u5143\u7d20\u90fd\u88ab\u653e\u5728\u8fd9\u4e2a\u94fe\u8868\u4e2d\u3002\u8ddf\u5f00\u653e\u5bfb\u5740\u7684\u65b9\u5f0f\u6bd4\u8f83\uff0c\u94fe\u5f0f\u5730\u5740\u5f15\u5165\u65b0\u7684\u6570\u636e\u7ed3\u6784\uff0c\u6bcf\u4e2a\u5143\u7d20\u9664\u4e86\u8981\u4fdd\u5b58 (key, value) \u952e\u503c\u5bf9\uff0c\u8fd8\u9700\u8981 \u4fdd\u5b58\u6307\u5411\u4e0b\u4e00\u4e2a\u8282\u70b9\u7684\u6307\u9488\uff0c\u589e\u52a0\u4e86\u7a7a\u95f4\u5f00\u9500 </p> <p>\u76f8\u5f53\u4e8e\u56fe\u7684\u90bb\u63a5\u8868\u5b9e\u73b0</p> <p> </p> \u64cd\u4f5c \u63cf\u8ff0 \u67e5\u8be2 \u8ba1\u7b97\u54c8\u5e0c\u51fd\u6570\u7ed3\u679c\u5f97\u5230\u7d22\u5f15\uff0c\u518d\u904d\u5386\u94fe\u8868\u5bfb\u627e\u5143\u7d20 \u589e\u52a0 \u8ba1\u7b97\u54c8\u5e0c\u51fd\u6570\u7ed3\u679c\u5f97\u5230\u7d22\u5f15\uff0c\u6dfb\u52a0\u5230\u94fe\u8868\u5934\u8282\u70b9 \u5220\u9664 \u8ba1\u7b97\u54c8\u5e0c\u51fd\u6570\u7ed3\u679c\u5f97\u5230\u7d22\u5f15\uff0c\u518d\u904d\u5386\u94fe\u8868\u5220\u9664\u5143\u7d20 <p>\u53ef\u4ee5\u53d1\u73b0\u5728\u5f97\u5230\u7d22\u5f15\u540e\u90fd\u4f1a\u6709\u4e00\u4e2a\u904d\u5386\u94fe\u8868\u7684\u64cd\u4f5c\uff0c\u53ef\u4ee5\u901a\u8fc7\u4f18\u5316\u94fe\u8868\u7684\u8868\u73b0\u5f62\u5f0f\uff0c\u6765\u51cf\u5c11\u64cd\u4f5c\u7684\u65f6\u95f4\uff0c\u6bd4\u5982\uff1a\u5c06\u94fe\u8868\u8f6c\u5316\u6210 \u5e73\u8861\u4e8c\u53c9\u641c\u7d22\u6811 \u6216\u8005 \u7ea2\u9ed1\u6811</p>","tags":[]},{"location":"1.%E8%AF%AD%E8%A8%80%E5%9F%BA%E7%A1%80/%E7%B1%BB%E5%9E%8B/5.map/#-_1","title":"\u51b2\u7a81\u89e3\u51b3 - \u5f00\u653e\u5bfb\u5740","text":"<p>\u5f00\u653e\u5bfb\u5740\u4e0d\u5f15\u5165\u989d\u5916\u6570\u636e\u7ed3\u6784\uff0c\u901a\u8fc7\u300c<code>\u591a\u6b21\u63a2\u6d4b</code>\u300d\u6765\u89e3\u51b3\u51b2\u7a81</p> <p>\u63a2\u6d4b\u7684\u65b9\u5f0f\u901a\u5e38\u6709\uff1a - \u7ebf\u6027\u63a2\u6d4b - \u5e73\u65b9\u63a2\u6d4b - \u591a\u6b21\u54c8\u5e0c</p> \u63a2\u6d4b\u65b9\u5f0f \u51b2\u7a81\u4ea7\u751f\u65f6\u6b65\u9aa4 \u7f3a\u70b9 \u7ebf\u6027\u63a2\u6d4b \u4ece\u51b2\u7a81\u4f4d\u7f6e\u5411\u540e\u904d\u5386\uff08\u6b65\u957f\u901a\u5e38\u4e3a 1\uff09\uff0c\u77e5\u9053\u627e\u5230\u7a7a\u4f4d <code>\u4f2a\u5220\u9664</code>\u3001<code>\u5143\u7d20\u805a\u96c6</code> \u591a\u6b21\u54c8\u5e0c \u5982\u679c\u7b2c\u4e00\u4e2a\u54c8\u5e0c\u51fd\u6570\u7ed3\u679c\u51b2\u7a81\uff0c\u5c1d\u8bd5\u4f7f\u7528\u7b2c\u4e8c\u4e2a\u54c8\u5e0c\u51fd\u6570\u6765\u8ba1\u7b97\uff0c\u76f4\u5230\u4e0d\u51b2\u7a81 <code>\u989d\u5916\u8ba1\u7b97</code>","tags":[]},{"location":"1.%E8%AF%AD%E8%A8%80%E5%9F%BA%E7%A1%80/%E7%B1%BB%E5%9E%8B/5.map/#golang-map","title":"\u4e8c\u3001Golang \u5982\u4f55\u5b9e\u73b0 map","text":"<p>go \u8bed\u8a00\u4e2d\uff0c\u89e3\u51b3\u51b2\u7a81\u91c7\u7528<code>\u94fe\u5f0f\u5730\u5740</code>\u7684\u65b9\u5f0f\uff0c\u89c4\u5b9a\u6bcf\u4e2a\u6876\u6700\u591a\u5b58\u50a8 <code>8</code> \u4e2a\u952e\u503c\u5bf9\uff0c\u8d85\u51fa\u5bb9\u91cf\u5219\u94fe\u63a5\u4e00\u4e2a<code>\u6ea2\u51fa\u6876</code>\uff0c\u5f53\u6ea2\u51fa\u6876\u8fc7\u591a\uff0c\u6267\u884c\u4e00\u6b21\u7279\u6b8a\u7684<code>\u7b49\u91cf\u6269\u5bb9</code>\uff0c\u5f53 map \u7684\u88c5\u8f7d\u56e0\u5b50 &gt; 6.5\uff0c\u6267\u884c\u4e00\u6b21 2 \u500d\u5bb9\u91cf\u7684\u6269\u5bb9</p>","tags":[]},{"location":"1.%E8%AF%AD%E8%A8%80%E5%9F%BA%E7%A1%80/%E7%B1%BB%E5%9E%8B/5.map/#21-hmap-bmap","title":"2.1 hmap \u548c bmap","text":"<p>\u8fd9\u662f\u5305\u542b hmap \u548c bmap \u7684\u4e00\u4e2a\u62bd\u8c61\u6a21\u578b\u56fe\uff1a</p> <p> </p> <p>hmap \u7ed3\u6784\u4f53\uff1a <pre><code>type hmap struct {\ncount     int\nflags     uint8\nB         uint8\nnoverflow uint16\nhash0     uint32\nbuckets    unsafe.Pointer\noldbuckets unsafe.Pointer\nnevacuate  uintptr\nextra *mapextra\n}\ntype mapextra struct {\noverflow    *[]*bmap\noldoverflow *[]*bmap\nnextOverflow *bmap\n}\n</code></pre></p> <p> </p> <p>\u4e0a\u56fe\u4e2d hmap.buckets \u6307\u5411\u7684\u662f\u4e00\u4e2a bmap \u7684\u5217\u8868\uff0c\u5927\u5c0f\u4e3a 2^B</p> <p>\u4e00\u4e2a\u6876 bmap \u7684\u7ed3\u6784\u4f53\uff1a <pre><code>type bmap struct {\ntophash [bucketCnt]uint8\n}\n</code></pre> \u5728\u7f16\u8bd1\u671f\u95f4\uff0c\u4f1a\u4ea7\u751f\u4e00\u4e2a\u65b0\u7684 bmap \u7ed3\u6784\uff1a <pre><code>type bmap struct {\ntopbits  [8]uint8\nkeys     [8]keytype\nvalues   [8]valuetype\npad      uintptr\noverflow uintptr\n}\n</code></pre></p> <p> </p> <p>\u5047\u8bbe\u5f53\u6709 9 \u4e2a\u5143\u7d20\u88ab\u653e\u5230\u540c\u4e00\u4e2a\u6876\uff0c\u4f1a\u521b\u5efa\u4e00\u4e2a\u65b0\u7684\u300c\u6ea2\u51fa\u6876\u300d\uff0c\u7528\u6765\u5b58\u653e\u6ea2\u51fa\u7684\u5143\u7d20\u3002</p> <p>\u770b\u4e00\u4e0b bmap \u5177\u4f53\u662f\u5982\u4f55\u4fdd\u5b58\u952e\u503c\u5bf9\u7684\uff0c\u8fd9\u662f\u4e00\u4e2a bmap \u7684\u5185\u5b58\u6a21\u578b\u56fe\uff1a</p> <p> </p> <p>hob hash \u6307\u7684\u662f top hash\uff0c\u4e5f\u5c31\u662f\u54c8\u5e0c\u503c\u7684\u300c\u9ad8 8 \u4f4d\u300d\uff0c\u540c\u65f6 key \u4e0e value \u7684\u5b58\u653e\u662f\u5206\u522b\u8fde\u7eed\u7684\uff0c\u800c\u4e0d\u662f key-value-key-value... \u7684\u5f62\u5f0f\uff0c\u4e3a\u7684\u662f\u907f\u514d\u5b57\u8282\u5bf9\u9f50\u5e26\u6765\u7684\u5185\u5b58\u6d6a\u8d39\uff0c\u5047\u8bbe\u4e00\u4e2a\u54c8\u5e0c\u503c\u9ad8 8 \u4f4d\u5bf9\u5e94\u7684\u662f\u6876\u7684\u7b2c\u4e00\u4e2a\u4f4d\u7f6e\uff0c\u90a3\u4e48\u5b83\u4fdd\u5b58\u7684\u5143\u7d20\u5e94\u8be5\u662f\uff1a</p> <p> </p>","tags":[]},{"location":"1.%E8%AF%AD%E8%A8%80%E5%9F%BA%E7%A1%80/%E7%B1%BB%E5%9E%8B/5.map/#22-key","title":"2.2 \u54c8\u5e0c\u51fd\u6570 \u4e0e key \u7684\u5b9a\u4f4d","text":"<p>// todo \u54c8\u5e0c\u51fd\u6570\u7684 \u9009\u62e9</p> <p>\u5728\u7ecf\u8fc7\u54c8\u5e0c\u51fd\u6570\u5904\u7406\u540e\u5f97\u5230\u7684\u54c8\u5e0c\u503c\u6709 64 bit\uff08\u5728 64 \u4f4d\u7684\u673a\u5668\u4e0a\uff09\uff0c\u5047\u8bbe\u4e0b\u9762\u662f\u4e00\u4e2a\u54c8\u5e0c\u503c</p> <p> </p> <p>\u5176\u4e2d\u6700\u4f4e\u7684 B \u4f4d\u7528\u6765\u786e\u5b9a\u5728<code>\u54ea\u4e2a\u6876</code>\uff0c\u9ad8 8 \u4f4d\u7528\u6765\u786e\u5b9a\u5728<code>\u6876\u7684\u54ea\u4e2a\u4f4d\u7f6e</code>\u3002\u4e0a\u9762\u8fd9\u4e2a\u4f8b\u5b50\u4e2d\uff0cB \u4e3a 5\uff0cmap \u4e2d\u6709 2^5 = 32 \u4e2a bucket\uff0c01010 \u4ee3\u8868\u7684\u4e8c\u8fdb\u5236\u6570\u4e3a 10\uff0c\u4e5f\u5c31\u8bf4\u660e\u8fd9\u4e2a key \u5e94\u8be5\u843d\u5728 10 \u53f7\u6876\uff0c\u5f53\u5143\u7d20\u627e\u5230\u5c5e\u4e8e\u7684\u6876\u4e4b\u540e\uff0c\u4f1a\u4ece\u524d\u5f80\u540e\u904d\u5386\u6876\u7684\u516b\u4e2a\u4f4d\u7f6e\uff0c\u627e\u5230\u4e00\u4e2a\u7a7a\u7684\u4f4d\u7f6e\u5c31\u653e\u5165\uff0c\u5982\u679c\u4e0d\u5b58\u5728\u7a7a\u4f4d\u7f6e\uff0c\u90a3\u4e48\u5c31\u6309\u540c\u6837\u7684\u65b9\u6cd5\u5728 overflow \u4e2d\u5bfb\u627e\u3002</p> <p>\u76f8\u6bd4\u4e8e\u4f20\u7edf\u7684\u54c8\u5e0c\u8868\u91c7\u7528\u7684\u94fe\u5730\u5740\u6cd5\u6765\u89e3\u51b3\u54c8\u5e0c\u51b2\u7a81\uff0cgo map \u7684\u5b9e\u73b0\u4e5f\u91c7\u7528\u5230\u4e86\u8fd9\u4e2a\u65b9\u6cd5\uff0c\u4f20\u7edf\u7684\u94fe\u5730\u5740\u6cd5\u4e2d\uff0c\u6bcf\u4e2a\u8282\u70b9\u4fdd\u5b58\u7684\u662f\u4e00\u4e2a\u5143\u7d20\uff0c\u6bcf\u4e2a\u8282\u70b9\u90fd\u9700\u8981\u4e00\u4e2a\u989d\u5916\u7684\u5185\u5b58\u6765\u4fdd\u5b58\u4e0b\u4e00\u4e2a\u8282\u70b9\u7684\u6307\u9488\uff0c\u9020\u6210\u4e86\u4e0d\u5c11\u7684\u7a7a\u95f4\u5f00\u9500\uff0cgo \u91c7\u7528\u4e86<code>\u77ed\u6570\u7ec4+\u94fe\u8868</code>\u7684\u5f62\u5f0f\uff0c\u76f8\u5f53\u4e8e\u6bcf\u4e2a\u8282\u70b9\u4fdd\u5b58\u7684\u662f\u4e00\u4e2a\u6876\uff0c\u6bcf\u4e2a\u6876\u4e2d\u53ef\u4ee5\u4fdd\u5b58 8 \u4e2a\u5143\u7d20\uff0c\u4f46\u4e0e\u94fe\u5730\u5740\u6cd5\u4e0d\u540c\u7684\u662f\uff0cGo \u4e2d\u662f\u4e0d\u4f1a\u8ba9\u8fd9\u4e2a\u94fe\u8868\u53d8\u5f97\u592a\u957f\u7684\uff0c\u5177\u4f53\u6d89\u53ca\u5230 map \u7684\u6269\u5bb9\u673a\u5236\u3002</p>","tags":[]},{"location":"1.%E8%AF%AD%E8%A8%80%E5%9F%BA%E7%A1%80/%E7%B1%BB%E5%9E%8B/5.map/#map","title":"\u4e09\u3001map \u7684\u6269\u5bb9","text":"","tags":[]},{"location":"1.%E8%AF%AD%E8%A8%80%E5%9F%BA%E7%A1%80/%E7%B1%BB%E5%9E%8B/5.map/#31","title":"3.1 \u4e3a\u4ec0\u4e48\u8981\u6269\u5bb9\uff1f","text":"<p>\u5bf9\u4e8e\u554a\u54c8\u5e0c\u8868\u6765\u8bf4\uff0c\u51b2\u7a81\u662f\u4e0d\u53ef\u907f\u514d\u7684\uff0c\u5f53\u4ea7\u751f\u7684\u51b2\u7a81\u8d8a\u6765\u8d8a\u591a\u7684\u65f6\u5019\uff0cmap \u7684\u5404\u79cd\u6027\u80fd\u90fd\u4f1a\u4e0b\u964d - \u4e3e\u4e00\u79cd\u6781\u7aef\u60c5\u51b51\uff1a\u6bcf\u6b21\u8ba1\u7b97\u7684\u54c8\u5e0c\u503c\u90fd\u76f8\u540c\u7684\u60c5\u51b5\u4e0b\uff0c\u90a3\u4e48\u6bcf\u6b21\u90fd\u4f1a\u88ab\u653e\u5165\u540c\u4e00\u4e2a\u6876\u4e2d\uff0c\u6876\u7684 8 \u4e2a\u7a7a\u4f4d\u5360\u6ee1\u4e4b\u540e\uff0c\u5f80\u540e\u94fe\u63a5\u6ea2\u51fa\u6876\uff0c\u4f9d\u6b21\u7c7b\u63a8\uff0c\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u67e5\u627e\u3001\u4fee\u6539\u64cd\u4f5c\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u90fd\u4f1a\u9000\u5316\u6210 O(n) - \u53e6\u5916\u4e00\u79cd\u60c5\u51b52\uff1a\u5047\u8bbe\u6bcf\u4e2a\u6876\u90fd\u5df2\u7ecf\u653e\u6ee1\u4e86\u5143\u7d20\uff0c\u90a3\u4e48\u4e4b\u540e\u5f80 map \u4e2d\u6dfb\u52a0\u6570\u636e\u90fd\u4f1a\u4ea7\u751f\u51b2\u7a81\uff0c\u4e5f\u5c31\u6162\u6162\u5f80\u60c5\u51b51\u7684\u573a\u666f\u4e0a\u9760\u8fd1\u4e86\u3002</p> <p>\u5bf9\u4e8e go \u7684 map \u6765\u8bf4\uff0c\u6bd4\u8f83\u7406\u60f3\u7684\u60c5\u51b5\u5e94\u8be5\u662f\u6bcf\u4e2a\u6876\u503c\u5b58\u653e\u4e00\u4e2a\u6570\u636e\uff0c\u4f46\u662f\u8fd9\u663e\u7136\u662f\u4e0d\u53ef\u80fd\u7684\uff0c\u8fd9\u4f1a\u9020\u6210\u5f88\u591a\u7684\u7a7a\u95f4\u6d6a\u8d39\u3002</p>","tags":[]},{"location":"1.%E8%AF%AD%E8%A8%80%E5%9F%BA%E7%A1%80/%E7%B1%BB%E5%9E%8B/5.map/#32","title":"3.2 \u4ec0\u4e48\u65f6\u5019\u4f1a\u53d1\u751f\u6269\u5bb9\uff1f","text":"<p>\u4e3a\u4e86\u63cf\u8ff0 map \u4fdd\u5b58\u5143\u7d20\u7684\u60c5\u51b5\uff0c\u5f15\u5165\u4e86\u4e00\u4e2a<code>\u88c5\u8f7d\u56e0\u5b50(= [\u5143\u7d20\u6570\u91cf]/[\u6876\u7684\u6570\u91cf])</code>\u7684\u6982\u5ff5\uff0c\u5f53\u8fd9\u4e2a\u88c5\u8f7d\u56e0\u5b50\u8d85\u8fc7 6.5 (golang) \u7684\u65f6\u5019\u5c31\u4f1a\u89e6\u53d1 map \u7684\u6269\u5bb9\u3002\u4ece\u88c5\u8f7d\u56e0\u5b50\u7684\u8ba1\u7b97\u516c\u5f0f\u53ef\u4ee5\u770b\u51fa\uff0c\u88c5\u8f7d\u56e0\u5b50\u6ca1\u6709\u529e\u6cd5\u8bc6\u522b\u5230\u4e0a\u9762\u7684\u60c5\u51b51\uff0c\u53ea\u80fd\u907f\u514d\u60c5\u51b52\uff0c\u56e0\u6b64\u8fd8\u9700\u8981\u53e6\u5916\u7684\u4e00\u4e2a\u89e6\u53d1\u6761\u4ef6\u6765\u907f\u514d\u60c5\u51b51</p> <p>\u5728 map \u7684 mapassign \u65b9\u6cd5\u4e2d\uff0c\u5224\u65ad\u662f\u5426\u9700\u8981\u6269\u5bb9\uff1a <pre><code>if !h.growing() &amp;&amp; (overLoadFactor(h.count+1, h.B) || tooManyOverflowBuckets(h.noverflow, h.B)) {  hashGrow(t, h)  goto again // Growing the table invalidates everything, so try again  \n}\n</code></pre> \u6761\u4ef61 - \u5224\u65ad\u8d1f\u8f7d\u56e0\u5b50\u662f\u5426 &gt; 6.5 \uff1a <pre><code>func overLoadFactor(count int, B uint8) bool {  return count &gt; bucketCnt &amp;&amp; uintptr(count) &gt; loadFactorNum*(bucketShift(B)/loadFactorDen)  }\n</code></pre> \u6761\u4ef62 - \u6ea2\u51fa\u6876\u7684\u6570\u91cf\u5927\u4e8e\u7b49\u4e8e\u6876\u7684\u6570\u91cf\uff1a <pre><code>func tooManyOverflowBuckets(noverflow uint16, B uint8) bool {  if B &gt; 15 {  B = 15  }  return noverflow &gt;= uint16(1)&lt;&lt;(B&amp;15)  }\n</code></pre> - \u5f53 B \u5927\u4e8e 15 \u5c06 B \u7f6e\u4e3a 15 \u7684\u539f\u56e0\u662f\u652f\u6301\u7684 map \u7684\u6700\u5927\u5bb9\u91cf\u4e3a 2^15 - <code>noverflow &gt;= uint16(1)&lt;&lt;(B&amp;15)</code> \u76f8\u5f53\u4e8e <code>noverflow &gt;= 1&lt;&lt;B</code>\uff0c\u4e5f\u5c31\u662f\u5f53\u300c\u6ea2\u51fa\u6876\u6570\u91cf\u300d&gt;=\u300c\u6876\u6570\u91cf\u300d\u7684\u65f6\u5019\uff0c\u8fdb\u884c\u6269\u5bb9\u64cd\u4f5c\u3002<code>uint16(1)&lt;&lt;(B&amp;15)</code> \u53ea\u662f\u4e3a\u4e86\u8ba9\u7f16\u8bd1\u5668\u751f\u6210\u66f4\u77ed\u7684\u4ee3\u7801\uff0c\u63d0\u9ad8\u7a0b\u5e8f\u6267\u884c\u7684\u6548\u7387\uff0c\u6ca1\u6709\u4ea7\u751f\u8bed\u4e49\u4e0a\u7684\u53d8\u5316</p>","tags":[]},{"location":"1.%E8%AF%AD%E8%A8%80%E5%9F%BA%E7%A1%80/%E7%B1%BB%E5%9E%8B/5.map/#33","title":"3.3 \u6269\u5bb9\u7684\u8fc7\u7a0b","text":"<p>\u5f53 map \u6269\u5bb9\u4e4b\u540e\uff0c\u4e3a\u4e86\u907f\u514d\u4e00\u6b21\u6027\u7684\u5927\u89c4\u6a21\u7684\u62f7\u8d1d\uff0cmap \u7684\u6269\u5bb9\u662f\u4e00\u4e2a<code>\u6e10\u8fdb\u5f0f\u7684\u8fc7\u7a0b</code>\uff0c\u6bcf\u6b21\u53ea\u62f7\u8d1d\u4e00\u4e2a\u6876\uff08\u4ee5\u53ca\u5b83\u5173\u8054\u7684\u6ea2\u51fa\u6876\uff09\uff0c\u8fd9\u4e2a\u62f7\u8d1d\u7684\u8fc7\u7a0b\u662f\u53d1\u751f\u5728\u589e\u52a0\u3001\u4fee\u6539\u3001\u5220\u9664\u64cd\u4f5c\u7684\u65f6\u5019</p>","tags":[]},{"location":"1.%E8%AF%AD%E8%A8%80%E5%9F%BA%E7%A1%80/%E7%B1%BB%E5%9E%8B/5.map/#hashgrow-buckets","title":"hashGrow\u65b9\u6cd5 - \u300cbuckets \u6269\u5bb9\u300d","text":"<pre><code>func hashGrow(t *maptype, h *hmap) {\n// If we've hit the load factor, get bigger.\n// Otherwise, there are too many overflow buckets,\n// so keep the same number of buckets and \"grow\" laterally.\nbigger := uint8(1)\nif !overLoadFactor(h.count+1, h.B) {\nbigger = 0\nh.flags |= sameSizeGrow\n}\noldbuckets := h.buckets\nnewbuckets, nextOverflow := makeBucketArray(t, h.B+bigger, nil)\nflags := h.flags &amp;^ (iterator | oldIterator)\nif h.flags&amp;iterator != 0 {\nflags |= oldIterator\n}\n// commit the grow (atomic wrt gc)\nh.B += bigger\nh.flags = flags\nh.oldbuckets = oldbuckets\nh.buckets = newbuckets\nh.nevacuate = 0\nh.noverflow = 0\nif h.extra != nil &amp;&amp; h.extra.overflow != nil {\n// Promote current overflow buckets to the old generation.\nif h.extra.oldoverflow != nil {\nthrow(\"oldoverflow is not nil\")\n}\nh.extra.oldoverflow = h.extra.overflow\nh.extra.overflow = nil\n}\nif nextOverflow != nil {\nif h.extra == nil {\nh.extra = new(mapextra)\n}\nh.extra.nextOverflow = nextOverflow\n}\n// the actual copying of the hash table data is done incrementally\n// by growWork() and evacuate().\n}\n</code></pre>","tags":[]},{"location":"1.%E8%AF%AD%E8%A8%80%E5%9F%BA%E7%A1%80/%E7%B1%BB%E5%9E%8B/5.map/#1","title":"\u7247\u6bb5\u89e3\u8bfb1","text":"<p><pre><code>bigger := uint8(1)\nif !overLoadFactor(h.count+1, h.B) {  bigger = 0  h.flags |= sameSizeGrow  }  oldbuckets := h.buckets  newbuckets, nextOverflow := makeBucketArray(t, h.B+bigger, nil)  </code></pre> \u8fd9\u6bb5\u4ee3\u7801\u4e3b\u8981\u662f\u5224\u65ad\u662f\u7531\u54ea\u79cd\u65b9\u5f0f\u5f15\u8d77\u7684\u6269\u5bb9\uff0c\u5982\u679c\u662f\u56e0\u4e3a\u88c5\u8f7d\u56e0\u5b50\u8fc7\u5927\u5bfc\u81f4\u7684\u6269\u5bb9\uff0c\u5219\u65b0 buckets \u7684\u5bb9\u91cf\u4e3a\u539f\u6765\u7684\u4e24\u500d\uff0c\u4e5f\u5c31\u662f\u5c06 bigger \u8bbe\u7f6e\u4e3a 1\uff0c\u5982\u679c\u662f\u56e0\u4e3a\u6ea2\u51fa\u6876\u8fc7\u591a\u5bfc\u81f4\u7684\u6269\u5bb9\uff0c\u5219\u65b0 buckets \u7684\u5bb9\u91cf\u4e0e\u539f\u6765\u7684\u5bb9\u91cf\u76f8\u540c</p> \u539f\u56e0 map\u5bb9\u91cf \u88c5\u8f7d\u56e0\u5b50&gt;6.5 \u539f\u6765\u7684\u5bb9\u91cf <code>x2</code> \u6ea2\u51fa\u6876\u8fc7\u591a <code>=</code> \u539f\u6765\u7684\u5bb9\u91cf","tags":[]},{"location":"1.%E8%AF%AD%E8%A8%80%E5%9F%BA%E7%A1%80/%E7%B1%BB%E5%9E%8B/5.map/#2","title":"\u7247\u6bb5\u89e3\u8bfb2","text":"<p><pre><code>oldbuckets := h.buckets  newbuckets, nextOverflow := makeBucketArray(t, h.B+bigger, nil)  flags := h.flags &amp;^ (iterator | oldIterator)  if h.flags&amp;iterator != 0 {  flags |= oldIterator  }\n</code></pre> \u8fd9\u91cc\u662f\u521b\u5efa\u65b0\u6876\u6570\u7ec4\u7684\u90e8\u5206\u3002\u9996\u5148\u5c06\u65e7\u6876\u6570\u7ec4\u4fdd\u5b58\u5230 <code>oldbuckets</code> \u53d8\u91cf\u4e2d\uff0c\u7136\u540e\u8c03\u7528 <code>makeBucketArray</code> \u51fd\u6570\u521b\u5efa\u65b0\u7684\u6876\u6570\u7ec4\u3002\u5982\u679c\u9700\u8981\u6269\u5bb9\uff0c\u5219\u65b0\u6876\u6570\u7ec4\u7684\u5927\u5c0f\u4e3a\u539f\u6765\u7684\u4e24\u500d\uff1b\u5426\u5219\uff0c\u65b0\u6876\u6570\u7ec4\u7684\u5927\u5c0f\u4e0e\u65e7\u6876\u6570\u7ec4\u76f8\u540c\u3002<code>makeBucketArray</code> \u51fd\u6570\u8fd8\u4f1a\u8fd4\u56de\u4e00\u4e2a\u6ea2\u51fa\u6876\u6570\u7ec4\uff0c\u5982\u679c\u6709\u7684\u8bdd\u3002</p> <p>\u63a5\u4e0b\u6765\uff0c\u4ee3\u7801\u6839\u636e\u5f53\u524d map \u7684\u6807\u5fd7\u4f4d\u6765\u66f4\u65b0\u65b0 map \u7684\u6807\u5fd7\u4f4d\u3002\u5982\u679c\u5f53\u524d map \u6b63\u5728\u88ab\u8fed\u4ee3\uff0c\u5219\u5c06\u65b0 map \u7684\u6807\u5fd7\u4f4d\u8bbe\u7f6e\u4e3a <code>oldIterator</code>\uff1b\u5426\u5219\uff0c\u5c06\u5176\u6e05\u9664</p>","tags":[]},{"location":"1.%E8%AF%AD%E8%A8%80%E5%9F%BA%E7%A1%80/%E7%B1%BB%E5%9E%8B/5.map/#3","title":"\u7247\u6bb5\u89e3\u8bfb3","text":"<pre><code>// commit the grow (atomic wrt gc)\nh.B += bigger\nh.flags = flags\nh.oldbuckets = oldbuckets\nh.buckets = newbuckets\nh.nevacuate = 0\nh.noverflow = 0\n</code></pre> <p>\u8fd9\u91cc\u662f\u63d0\u4ea4\u6269\u5bb9\u64cd\u4f5c\u7684\u90e8\u5206\u3002\u9996\u5148\u5c06 map \u7684\u5927\u5c0f\u589e\u52a0 <code>bigger</code>\uff08\u5373\u6269\u5bb9\u6216\u6a2a\u5411\u6269\u5c55\u540e\u7684\u5927\u5c0f\uff09\uff0c\u7136\u540e\u66f4\u65b0\u6807\u5fd7\u4f4d\u3001\u65e7\u6876\u6570\u7ec4\u548c\u65b0\u6876\u6570\u7ec4\u3002\u540c\u65f6\uff0c\u5c06 <code>nevacuate</code> \u548c <code>noverflow</code> \u4e24\u4e2a\u8ba1\u6570\u5668\u6e05\u96f6\uff0c\u8868\u793a\u6ca1\u6709\u9700\u8981\u8fc1\u79fb\u7684\u5143\u7d20\u548c\u6ea2\u51fa\u6876</p>","tags":[]},{"location":"1.%E8%AF%AD%E8%A8%80%E5%9F%BA%E7%A1%80/%E7%B1%BB%E5%9E%8B/5.map/#4","title":"\u7247\u6bb5\u89e3\u8bfb4","text":"<pre><code>if h.extra != nil &amp;&amp; h.extra.overflow != nil {  // Promote current overflow buckets to the old generation.  \nif h.extra.oldoverflow != nil {  throw(\"oldoverflow is not nil\")  }  h.extra.oldoverflow = h.extra.overflow  h.extra.overflow = nil  }  if nextOverflow != nil {  if h.extra == nil {  h.extra = new(mapextra)  }  h.extra.nextOverflow = nextOverflow  }\n</code></pre> <p>\u8fd9\u91cc\u662f\u5904\u7406\u6ea2\u51fa\u6876\u7684\u90e8\u5206\u3002\u5982\u679c\u5f53\u524d map \u4e2d\u5b58\u5728\u6ea2\u51fa\u6876\uff0c\u5219\u5c06\u5176\u63d0\u5347\u5230\u65e7\u6876\u6570\u7ec4\u4e2d\u3002\u5982\u679c\u65b0\u6876\u6570\u7ec4\u4e2d\u4e5f\u5b58\u5728\u6ea2\u51fa\u6876\uff0c\u5219\u5c06\u5176\u4fdd\u5b58\u5230 <code>extra</code> \u5b57\u6bb5\u4e2d</p>","tags":[]},{"location":"1.%E8%AF%AD%E8%A8%80%E5%9F%BA%E7%A1%80/%E7%B1%BB%E5%9E%8B/5.map/#evacuate-","title":"evacuate\u65b9\u6cd5 - \u300c\u6570\u636e\u8fc1\u79fb\u300d","text":"","tags":[]},{"location":"1.%E8%AF%AD%E8%A8%80%E5%9F%BA%E7%A1%80/%E7%B1%BB%E5%9E%8B/5.map/#1_1","title":"\u7247\u6bb5\u89e3\u8bfb1","text":"<p><pre><code>b := (*bmap)(add(h.oldbuckets, oldbucket*uintptr(t.bucketsize)))  newbit := h.noldbuckets()  if !evacuated(b) {\n</code></pre> \u83b7\u5f97\u65e7 bucket\uff0c\u5224\u65ad\u8fd9\u4e2a bucket \u662f\u5426\u9700\u8981\u8fdb\u884c\u8fc1\u79fb\uff08\u662f\u5426\u8fc1\u79fb\u5b8c\u6210\uff09</p>","tags":[]},{"location":"1.%E8%AF%AD%E8%A8%80%E5%9F%BA%E7%A1%80/%E7%B1%BB%E5%9E%8B/5.map/#2_1","title":"\u7247\u6bb5\u89e3\u8bfb2","text":"<p><pre><code>if !evacuated(b) {\n// TODO: reuse overflow buckets instead of using new ones, if there\n// is no iterator using the old buckets.  (If !oldIterator.)\n// xy contains the x and y (low and high) evacuation destinations.\nvar xy [2]evacDst\nx := &amp;xy[0]\nx.b = (*bmap)(add(h.buckets, oldbucket*uintptr(t.bucketsize)))\nx.k = add(unsafe.Pointer(x.b), dataOffset)\nx.e = add(x.k, bucketCnt*uintptr(t.keysize))\nif !h.sameSizeGrow() {\n// Only calculate y pointers if we're growing bigger.\n// Otherwise GC can see bad pointers.\ny := &amp;xy[1]\ny.b = (*bmap)(add(h.buckets, (oldbucket+newbit)*uintptr(t.bucketsize)))\ny.k = add(unsafe.Pointer(y.b), dataOffset)\ny.e = add(y.k, bucketCnt*uintptr(t.keysize))\n}\n...\n}\n</code></pre> \u8fd9\u6bb5\u4ee3\u7801\u7684\u4f5c\u7528\u662f\u4e3a\u54c8\u5e0c\u8868\u8fdb\u884c\u6269\u5bb9\u65f6\uff0c\u8ba1\u7b97\u51fa\u65e7\u6876\u4e2d\u952e\u503c\u5bf9\u9700\u8981\u8fc1\u79fb\u5230\u7684\u65b0\u6876\u7684\u4f4d\u7f6e\u3002\u5177\u4f53\u6765\u8bf4\uff1a</p> <ul> <li>\u9996\u5148\u5b9a\u4e49\u4e86\u4e00\u4e2a\u957f\u5ea6\u4e3a2\u7684\u6570\u7ec4xy\uff0c\u7528\u4e8e\u5b58\u50a8\u4e24\u4e2a\u758f\u6563\u76ee\u7684\u5730\uff08evacDst\uff09\u3002</li> <li>\u7136\u540e\u901a\u8fc7\u6307\u9488x\u6307\u5411xy[0]\uff0c\u5e76\u5c06\u5176b\u5b57\u6bb5\u8bbe\u7f6e\u4e3a\u65e7\u6876\u4e2d\u7b2coldbucket\u4e2a\u6876\u7684\u5730\u5740\uff0ck\u5b57\u6bb5\u8bbe\u7f6e\u4e3a\u8be5\u6876\u4e2d\u6570\u636e\u533a\u57df\u7684\u8d77\u59cb\u5730\u5740\uff0ce\u5b57\u6bb5\u8bbe\u7f6e\u4e3a\u8be5\u6876\u4e2d\u6570\u636e\u533a\u57df\u7684\u7ed3\u675f\u5730\u5740\u3002</li> <li> <p>\u5982\u679c\u54c8\u5e0c\u8868\u4e0d\u662f\u540c\u7b49\u5927\u5c0f\u7684\u6269\u5bb9\uff0c\u5219\u8fd8\u9700\u8981\u8ba1\u7b97\u7b2c\u4e8c\u4e2a\u758f\u6563\u76ee\u7684\u5730y\u7684\u4f4d\u7f6e\u3002\u6b64\u65f6\u901a\u8fc7\u6307\u9488y\u6307\u5411xy[1]\uff0c\u5e76\u5c06\u5176b\u3001k\u3001e\u5b57\u6bb5\u5206\u522b\u8bbe\u7f6e\u4e3a\u65b0\u6876\u4e2d\u7b2c(oldbucket+newbit)\u4e2a\u6876\u7684\u5730\u5740\u3001\u8be5\u6876\u4e2d\u6570\u636e\u533a\u57df\u7684\u8d77\u59cb\u5730\u5740\u548c\u7ed3\u675f\u5730\u5740\u3002</p> <p>\u5f53\u53d1\u751f\u7684\u662f\u4e24\u500d\u5bb9\u91cf\u6269\u5bb9\u7684\u65f6\u5019\uff0c\u539f\u5148\u4e00\u4e2a\u6876\u4e2d\u7684\u5143\u7d20\u4f1a\u88c2\u53d8\u5230\u4e24\u4e2a\u6876\u4e2d\uff0c\u56e0\u4e3a\u539f\u5148\u4f7f\u7528\u4f4e B \u4f4d\u6765\u5224\u65ad\u6620\u5c04\u5230\u54ea\u4e2a\u6876\uff0c\u73b0\u5728\u9700\u8981\u6839\u636e\u4f4e B+1 \u4f4d\u6765\u5224\u65ad\u6620\u5c04\u5230\u54ea\u4e2a\u6876\uff0c\u56e0\u6b64\u5f53\u7b2c B+1 \u4f4d\u4e3a 0 \u7684\u65f6\u5019\uff0c\u6876\u7684\u76f8\u5bf9\u4f4d\u7f6e\u4e0e\u539f\u5148\u7684\u6876\u662f\u4e00\u6837\u7684\uff0c\u5f53\u7b2c B+1 \u4f4d\u4e3a 1 \u65f6\uff0c\u5c31\u9700\u8981\u653e\u5230\u4e24\u5916\u4e00\u4e2a\u6876\u4e2d</p> </li> </ul> <p>\u603b\u4e4b\uff0c\u8fd9\u6bb5\u4ee3\u7801\u7684\u4f5c\u7528\u662f\u4e3a\u54c8\u5e0c\u8868\u6269\u5bb9\u65f6\u8ba1\u7b97\u51fa\u65e7\u6876\u4e2d\u952e\u503c\u5bf9\u9700\u8981\u8fc1\u79fb\u5230\u7684\u65b0\u6876\u7684\u4f4d\u7f6e\uff0c\u5e76\u5c06\u8fd9\u4e9b\u4f4d\u7f6e\u4fe1\u606f\u5b58\u50a8\u5728xy\u6570\u7ec4\u4e2d\u3002</p>","tags":[]},{"location":"1.%E8%AF%AD%E8%A8%80%E5%9F%BA%E7%A1%80/%E7%B1%BB%E5%9E%8B/5.map/#3_1","title":"\u7247\u6bb5\u89e3\u8bfb3","text":"<p><pre><code>for ; b != nil; b = b.overflow(t) {\nk := add(unsafe.Pointer(b), dataOffset)\ne := add(k, bucketCnt*uintptr(t.keysize))\nfor i := 0; i &lt; bucketCnt; i, k, e = i+1, add(k, uintptr(t.keysize)), add(e, uintptr(t.elemsize)) {\ntop := b.tophash[i]\nif isEmpty(top) {\nb.tophash[i] = evacuatedEmpty\ncontinue\n}\nif top &lt; minTopHash {\nthrow(\"bad map state\")\n}\nk2 := k\nif t.indirectkey() {\nk2 = *((*unsafe.Pointer)(k2))\n}\nvar useY uint8\nif !h.sameSizeGrow() {\n// Compute hash to make our evacuation decision (whether we need\n// to send this key/elem to bucket x or bucket y).\nhash := t.hasher(k2, uintptr(h.hash0))\nif h.flags&amp;iterator != 0 &amp;&amp; !t.reflexivekey() &amp;&amp; !t.key.equal(k2, k2) {\n// If key != key (NaNs), then the hash could be (and probably\n// will be) entirely different from the old hash. Moreover,\n// it isn't reproducible. Reproducibility is required in the\n// presence of iterators, as our evacuation decision must\n// match whatever decision the iterator made.\n// Fortunately, we have the freedom to send these keys either\n// way. Also, tophash is meaningless for these kinds of keys.\n// We let the low bit of tophash drive the evacuation decision.\n// We recompute a new random tophash for the next level so\n// these keys will get evenly distributed across all buckets\n// after multiple grows.\nuseY = top &amp; 1\ntop = tophash(hash)\n} else {\nif hash&amp;newbit != 0 {\nuseY = 1\n}\n}\n}\nif evacuatedX+1 != evacuatedY || evacuatedX^1 != evacuatedY {\nthrow(\"bad evacuatedN\")\n}\nb.tophash[i] = evacuatedX + useY // evacuatedX + 1 == evacuatedY\ndst := &amp;xy[useY]                 // evacuation destination\nif dst.i == bucketCnt {\ndst.b = h.newoverflow(t, dst.b)\ndst.i = 0\ndst.k = add(unsafe.Pointer(dst.b), dataOffset)\ndst.e = add(dst.k, bucketCnt*uintptr(t.keysize))\n}\ndst.b.tophash[dst.i&amp;(bucketCnt-1)] = top // mask dst.i as an optimization, to avoid a bounds check\nif t.indirectkey() {\n*(*unsafe.Pointer)(dst.k) = k2 // copy pointer\n} else {\ntypedmemmove(t.key, dst.k, k) // copy elem\n}\nif t.indirectelem() {\n*(*unsafe.Pointer)(dst.e) = *(*unsafe.Pointer)(e)\n} else {\ntypedmemmove(t.elem, dst.e, e)\n}\ndst.i++\n// These updates might push these pointers past the end of the\n// key or elem arrays.  That's ok, as we have the overflow pointer\n// at the end of the bucket to protect against pointing past the\n// end of the bucket.\ndst.k = add(dst.k, uintptr(t.keysize))\ndst.e = add(dst.e, uintptr(t.elemsize))\n}\n}\n</code></pre> \u8be5\u4ee3\u7801\u4e2d\u7684\u5faa\u73af\u904d\u5386\u4e86\u5f53\u524d\u54c8\u5e0c\u8868\u4e2d\u6240\u6709\u7684\u6876\uff08bucket\uff09\uff0c\u5e76\u5c06\u5176\u4e2d\u7684\u5143\u7d20\u91cd\u65b0\u5206\u914d\u5230\u65b0\u7684\u54c8\u5e0c\u8868\u4e2d\u3002\u5177\u4f53\u6765\u8bf4\uff0c\u5bf9\u4e8e\u6bcf\u4e2a\u6876\uff0c\u5b83\u7684 tophash \u6570\u7ec4\u4e2d\u5b58\u50a8\u4e86\u8be5\u6876\u4e2d\u6bcf\u4e2a\u5143\u7d20\u7684\u54c8\u5e0c\u503c\u7684\u524d 8 \u4f4d\uff0c\u5982\u679c\u67d0\u4e2a\u5143\u7d20\u7684 tophash \u503c\u4e3a evacuatedEmpty\uff0c\u5219\u8868\u793a\u8be5\u5143\u7d20\u5df2\u7ecf\u88ab\u8fc1\u79fb\u5230\u65b0\u7684\u54c8\u5e0c\u8868\u4e2d\uff1b\u5982\u679c tophash \u503c\u5c0f\u4e8e minTopHash\uff0c\u5219\u8868\u793a\u54c8\u5e0c\u8868\u72b6\u6001\u9519\u8bef\u3002</p> <p>\u5bf9\u4e8e\u6bcf\u4e2a\u975e\u7a7a\u5143\u7d20\uff0c\u9996\u5148\u6839\u636e\u5176\u952e\u7684\u54c8\u5e0c\u503c\u8ba1\u7b97\u51fa\u5b83\u5e94\u8be5\u88ab\u8fc1\u79fb\u5230\u65b0\u54c8\u5e0c\u8868\u7684\u54ea\u4e2a\u6876\u4e2d\u3002\u5982\u679c\u65b0\u54c8\u5e0c\u8868\u7684\u5927\u5c0f\u548c\u65e7\u54c8\u5e0c\u8868\u76f8\u540c\uff0c\u5219\u76f4\u63a5\u5c06\u5143\u7d20\u590d\u5236\u5230\u65b0\u54c8\u5e0c\u8868\u4e2d\u5bf9\u5e94\u7684\u6876\u4e2d\uff1b\u5426\u5219\uff0c\u9700\u8981\u6839\u636e\u5143\u7d20\u7684\u54c8\u5e0c\u503c\u5224\u65ad\u5b83\u5e94\u8be5\u88ab\u8fc1\u79fb\u5230\u65b0\u54c8\u5e0c\u8868\u7684\u54ea\u4e2a\u6876\u4e2d\u3002\u5982\u679c\u5143\u7d20\u7684\u952e\u662f NaN\uff0c\u5219\u4f7f\u7528 tophash \u7684\u6700\u4f4e\u4f4d\u6765\u51b3\u5b9a\u5b83\u7684\u8fc1\u79fb\u76ee\u6807\uff0c\u4ee5\u4fdd\u8bc1\u591a\u6b21\u6269\u5bb9\u540e\u4ecd\u80fd\u5747\u5300\u5730\u5206\u5e03\u5728\u6240\u6709\u6876\u4e2d\u3002</p> <p>\u5728\u5c06\u5143\u7d20\u8fc1\u79fb\u5230\u65b0\u54c8\u5e0c\u8868\u7684\u8fc7\u7a0b\u4e2d\uff0c\u9700\u8981\u5c06\u5143\u7d20\u7684\u952e\u548c\u503c\u590d\u5236\u5230\u65b0\u7684\u6876\u4e2d\uff0c\u5e76\u66f4\u65b0 tophash \u6570\u7ec4\u3002\u5982\u679c\u5143\u7d20\u7684\u952e\u6216\u503c\u662f\u6307\u9488\u7c7b\u578b\uff0c\u5219\u9700\u8981\u4f7f\u7528 unsafe.Pointer \u8fdb\u884c\u8f6c\u6362\u3002\u540c\u65f6\uff0c\u8fd8\u9700\u8981\u8bb0\u5f55\u5df2\u7ecf\u88ab\u8fc1\u79fb\u7684\u5143\u7d20\u6570\u91cf\uff0c\u4ee5\u4fbf\u5728\u8fc1\u79fb\u5b8c\u6210\u540e\u6e05\u7a7a\u65e7\u54c8\u5e0c\u8868\u4e2d\u7684\u5143\u7d20\u3002</p> <p>\u6700\u540e\uff0c\u5982\u679c\u65e7\u54c8\u5e0c\u8868\u4e2d\u5b58\u5728\u6ea2\u51fa\u6876\uff08overflow bucket\uff09\uff0c\u5219\u9700\u8981\u5c06\u5b83\u4eec\u4e0e\u4e3b\u6876\u5206\u79bb\uff0c\u5e76\u6e05\u7a7a\u5176\u4e2d\u7684\u952e\u548c\u503c\uff0c\u4ee5\u4fbf\u5783\u573e\u56de\u6536\u5668\u56de\u6536\u8fd9\u4e9b\u5185\u5b58\u3002</p>","tags":[]},{"location":"1.%E8%AF%AD%E8%A8%80%E5%9F%BA%E7%A1%80/%E7%B1%BB%E5%9E%8B/5.map/#4_1","title":"\u7247\u6bb5\u89e3\u8bfb4","text":"<p><pre><code>// Unlink the overflow buckets &amp; clear key/elem to help GC.  \nif h.flags&amp;oldIterator == 0 &amp;&amp; t.bucket.ptrdata != 0 {  b := add(h.oldbuckets, oldbucket*uintptr(t.bucketsize))  // Preserve b.tophash because the evacuation  \n// state is maintained there.   \nptr := add(b, dataOffset)  n := uintptr(t.bucketsize) - dataOffset  memclrHasPointers(ptr, n)  }\n</code></pre> \u5728\u4e0a\u8ff0\u4ee3\u7801\u4e2d\uff0c\u9996\u5148\u5224\u65ad\u5f53\u524d\u662f\u5426\u5904\u4e8e\u65e7\u54c8\u5e0c\u8868\u7684\u8fed\u4ee3\u72b6\u6001\uff08oldIterator\uff09\uff0c\u5982\u679c\u4e0d\u662f\uff0c\u5219\u6267\u884c\u4ee5\u4e0b\u64cd\u4f5c\uff1a</p> <ol> <li>\u83b7\u53d6\u65e7\u54c8\u5e0c\u8868\u4e2d\u7684\u6876\uff08b\uff09\u3002</li> <li>\u5c06\u6ea2\u51fa\u6876\u4e0e\u952e\u503c\u5bf9\u89e3\u9664\u94fe\u63a5\uff0c\u5373\u5c06\u5176\u6307\u9488\u6e05\u7a7a\u3002</li> <li>\u6e05\u7a7a\u952e\u548c\u503c\u7684\u5185\u5bb9\uff0c\u4ee5\u4fbf\u4e8e\u5783\u573e\u56de\u6536\u3002</li> </ol> <p>\u8fd9\u4e9b\u64cd\u4f5c\u7684\u76ee\u7684\u662f\u4e3a\u4e86\u51cf\u5c11\u65e7\u54c8\u5e0c\u8868\u4e2d\u7684\u5185\u5b58\u5360\u7528\uff0c\u5e76\u4e14\u5e2e\u52a9\u5783\u573e\u56de\u6536\u5668\u8bc6\u522b\u54ea\u4e9b\u5bf9\u8c61\u53ef\u4ee5\u88ab\u56de\u6536\u3002\u5728\u8fc1\u79fb\u5b8c\u6210\u540e\uff0c\u65e7\u54c8\u5e0c\u8868\u4f1a\u88ab\u91ca\u653e\u6389\uff0c\u8fd9\u6837\u5c31\u53ef\u4ee5\u91ca\u653e\u65e7\u54c8\u5e0c\u8868\u4e2d\u7684\u6240\u6709\u5185\u5b58</p>","tags":[]},{"location":"1.%E8%AF%AD%E8%A8%80%E5%9F%BA%E7%A1%80/%E7%B1%BB%E5%9E%8B/5.map/#5","title":"\u7247\u6bb5\u89e3\u8bfb5","text":"<pre><code>if oldbucket == h.nevacuate {  advanceEvacuationMark(h, t, newbit)  }\n</code></pre> <p>todo</p>","tags":[]},{"location":"1.%E8%AF%AD%E8%A8%80%E5%9F%BA%E7%A1%80/%E7%B1%BB%E5%9E%8B/5.map/#_2","title":"\u4e24\u79cd\u6269\u5bb9\u65b9\u5f0f","text":"\u539f\u56e0 map\u5bb9\u91cf \u88c5\u8f7d\u56e0\u5b50&gt;6.5 \u539f\u6765\u7684\u5bb9\u91cf <code>x2</code> \u6ea2\u51fa\u6876\u8fc7\u591a <code>=</code> \u539f\u6765\u7684\u5bb9\u91cf <ol> <li>6.1. \u00a0 \u54c8\u5e0c\u8868 - Hello \u7b97\u6cd5</li> <li>\u7531\u6d45\u5230\u6df1\uff0c\u5165\u95e8Go\u8bed\u8a00Map\u5b9e\u73b0\u539f\u7406 - TIGERB\u7684\u6280\u672f\u535a\u5ba2 - SegmentFault \u601d\u5426</li> <li>Go\u9762\u8bd5\u9898(\u4e09)\uff1amap\u7684\u5b9e\u73b0\u539f\u7406_map\u662f\u57fa\u4e8e\u4ec0\u4e48\u5b9e\u73b0\u7684_\u6211\u662f\u5c0f\u9053\u54e5\u7684\u535a\u5ba2-CSDN\u535a\u5ba2</li> </ol>","tags":[]},{"location":"1.%E8%AF%AD%E8%A8%80%E5%9F%BA%E7%A1%80/%E7%B1%BB%E5%9E%8B/6.interface/","title":"interface(TODO)","text":"<p>go version is go1.20.4</p> <p>todo</p>","tags":[]},{"location":"1.%E8%AF%AD%E8%A8%80%E5%9F%BA%E7%A1%80/%E7%B1%BB%E5%9E%8B/7.func/","title":"func(TODO)","text":"<p>go version is go1.20.4</p> <p>todo</p>","tags":[]},{"location":"1.%E8%AF%AD%E8%A8%80%E5%9F%BA%E7%A1%80/%E7%B1%BB%E5%9E%8B/8.pointer/","title":"pointer(TODO)","text":"<p>go version is go1.20.4</p> <p>todo</p>","tags":[]},{"location":"8.%E5%85%B6%E4%BB%96/1.golang%E5%AD%A6%E4%B9%A0%E7%AB%99%E7%82%B9%E3%80%81%E8%AE%BA%E5%9D%9B/","title":"1.golang\u5b66\u4e60\u7ad9\u70b9\u3001\u8bba\u575b","text":"","tags":[]},{"location":"8.%E5%85%B6%E4%BB%96/1.golang%E5%AD%A6%E4%B9%A0%E7%AB%99%E7%82%B9%E3%80%81%E8%AE%BA%E5%9D%9B/#_1","title":"\u5b98\u65b9\u7ad9\u70b9","text":"<ol> <li>The Go Blog - The Go Programming Language</li> <li>Home \u00b7 golang/go Wiki \u00b7 GitHub</li> </ol>","tags":[]},{"location":"8.%E5%85%B6%E4%BB%96/1.golang%E5%AD%A6%E4%B9%A0%E7%AB%99%E7%82%B9%E3%80%81%E8%AE%BA%E5%9D%9B/#_2","title":"\u4e2a\u4eba\u535a\u5ba2","text":"<ol> <li>\u718a\u55b5\u541b\u7684\u535a\u5ba2 | PANDAYCHEN</li> <li>\u9762\u5411\u4fe1\u4ef0\u7f16\u7a0b</li> <li>Go \u8bed\u8a00\u8bbe\u8ba1\u4e0e\u5b9e\u73b0 | Go \u8bed\u8a00\u8bbe\u8ba1\u4e0e\u5b9e\u73b0</li> <li>Changkun Ou | Go \u8bed\u8a00\u539f\u672c</li> <li>Go \u7a0b\u5e8f\u5458\u9762\u8bd5\u7b14\u8bd5\u5b9d\u5178 | Go \u7a0b\u5e8f\u5458\u9762\u8bd5\u7b14\u8bd5\u5b9d\u5178</li> <li>Go\u8bed\u8a00\u9ad8\u7ea7\u7f16\u7a0b - Go\u8bed\u8a00\u9ad8\u7ea7\u7f16\u7a0b</li> </ol>","tags":[]},{"location":"8.%E5%85%B6%E4%BB%96/1.golang%E5%AD%A6%E4%B9%A0%E7%AB%99%E7%82%B9%E3%80%81%E8%AE%BA%E5%9D%9B/#_3","title":"\u4ee3\u7801\u5e93","text":"<ol> <li>GitHub - golang/go: The Go programming language</li> </ol>","tags":[]}]}